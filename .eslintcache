[{"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js":"1","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js":"2","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js":"3","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js":"4","C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js":"5","C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js":"6","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js":"7","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js":"8","C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js":"9","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js":"10","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js":"11","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js":"12","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js":"13","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js":"14","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js":"15","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js":"16","C:\\Users\\Pranil\\pranil\\conquer\\src\\App.js":"17","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\YearPicker\\YearPicker.js":"18","C:\\Users\\Pranil\\pranil\\conquer\\src\\firebase.js":"19","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Year\\Year.js":"20","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Navbar\\Navbar.js":"21","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Sidebar\\Sidebar.js":"22","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Daily\\Daily.js":"23","C:\\Users\\Pranil\\pranil\\conquer\\src\\loadingContext.js":"24","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\IncompleteTodosSidebar\\IncompleteTodosSidebar.js":"25","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\MonthCalendar\\MonthCalendar.js":"26","C:\\Users\\Pranil\\pranil\\conquer\\src\\serviceWorkerRegistration.js":"27","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\VisionBoard\\VisionBoard.js":"28"},{"size":14045,"mtime":1619176033532,"results":"29","hashOfConfig":"30"},{"size":5810,"mtime":1619175912294,"results":"31","hashOfConfig":"30"},{"size":7521,"mtime":1619175765926,"results":"32","hashOfConfig":"30"},{"size":7313,"mtime":1610388187501,"results":"33","hashOfConfig":"30"},{"size":559,"mtime":1610388187527,"results":"34","hashOfConfig":"30"},{"size":745,"mtime":1619171757516,"results":"35","hashOfConfig":"30"},{"size":635,"mtime":1610388187511,"results":"36","hashOfConfig":"30"},{"size":4540,"mtime":1610385987504,"results":"37","hashOfConfig":"30"},{"size":748,"mtime":1611242660213,"results":"38","hashOfConfig":"30"},{"size":735,"mtime":1610388187508,"results":"39","hashOfConfig":"30"},{"size":657,"mtime":1609410557589,"results":"40","hashOfConfig":"30"},{"size":385,"mtime":1611233512865,"results":"41","hashOfConfig":"30"},{"size":478,"mtime":1609410556353,"results":"42","hashOfConfig":"30"},{"size":686,"mtime":1609942698654,"results":"43","hashOfConfig":"30"},{"size":4142,"mtime":1611230048185,"results":"44","hashOfConfig":"30"},{"size":6297,"mtime":1610388187524,"results":"45","hashOfConfig":"30"},{"size":2585,"mtime":1611302435233,"results":"46","hashOfConfig":"30"},{"size":901,"mtime":1610388187525,"results":"47","hashOfConfig":"30"},{"size":536,"mtime":1606213557623,"results":"48","hashOfConfig":"30"},{"size":713,"mtime":1611303404860,"results":"49","hashOfConfig":"30"},{"size":902,"mtime":1611238101095,"results":"50","hashOfConfig":"30"},{"size":1923,"mtime":1610388187520,"results":"51","hashOfConfig":"30"},{"size":948,"mtime":1610388187502,"results":"52","hashOfConfig":"30"},{"size":170,"mtime":1610385987505,"results":"53","hashOfConfig":"30"},{"size":8683,"mtime":1611399363989,"results":"54","hashOfConfig":"30"},{"size":1892,"mtime":1610388187513,"results":"55","hashOfConfig":"30"},{"size":5233,"mtime":1610388187529,"results":"56","hashOfConfig":"30"},{"size":748,"mtime":1609943111638,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"cqertl",{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"import { Checkbox, IconButton } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport QueueIcon from \"@material-ui/icons/Queue\";\r\nimport NewTodoModal from \"../NewTodoModal/NewTodoModal\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport \"./AllTodos.css\";\r\nimport EachTodo from \"../EachTodo/EachTodo\";\r\nimport YearPicker from \"../YearPicker/YearPicker\";\r\nimport IncompleteTodosSidebar from \"../IncompleteTodosSidebar/IncompleteTodosSidebar\";\r\nimport { loadingContext } from \"../../loadingContext\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nfunction AllTodos() {\r\n  const user = useContext(loadingContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const location = useLocation(); //holds props\r\n  const [time, setTime] = useState(location.state.time); //this holds the date/month/week/year of which the user wants all todos\r\n  const lastPage = location.state.lastPage; //this holds daily/weekly/monthly/yearly basically the type of time wanted\r\n  const [finishedTodos, setFinishedTodos] = useState([]);\r\n  const [unfinishedTodos, setUnfinishedTodos] = useState([]);\r\n  //finished and unfinished todos get updated when i use loadData func\r\n  const [expandTaskId, setExpandTaskId] = useState(\"\");\r\n  const [expandTaskName, setExpandTaskName] = useState(\"\");\r\n  const [expandTaskDesc, setExpandTaskDesc] = useState(\"\");\r\n  const [expandTaskPri, setExpandTaskPri] = useState(\"0\");\r\n  //if any specific todo is clicked, all these expandTask details will be passed as a prop to the modal\r\n  \r\n  const [openTodoModal, setOpenTodoModal] = useState(false);\r\n  //whenever this is true modal with required props is rendered\r\n\r\n  function loadData() {\r\n    //this function fetches todos from firebase of the specific time, distinguishes them as finished and unfinished and stores them in state variables\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .where(\"user\", \"==\", firebaseApp.auth().currentUser.uid)\r\n      .where(\"time\", \"==\", time)\r\n      .orderBy(\"priority\", \"desc\")\r\n      .get()\r\n      .then((snap) => {\r\n        setLoading(true);\r\n        //i know it seems silly to setLoading true and false one after another... i don't why but if i don't do that then unwanted tasks get ticked...\r\n        let finished = [];\r\n        let unfinished = [];\r\n        snap.docs.map((each) => {\r\n          let eachdict = {\r\n            id: each.id,\r\n            taskName: each.get(\"taskName\"),\r\n            taskDesc: each.get(\"taskDesc\"),\r\n            priority: each.get(\"priority\"),\r\n            finished: each.get(\"finished\"),\r\n            time: each.get(\"time\"),\r\n            index: each.get(\"index\"),\r\n            timeType: each.get(\"timeType\"),\r\n          };\r\n          if (each.get(\"finished\")) {\r\n            //each doc in todos collection of firebase is added to either finished or unfinished list based on its finished status\r\n            finished.push(eachdict);\r\n          } else {\r\n            unfinished.push(eachdict);\r\n          }\r\n        });\r\n        setFinishedTodos(\r\n          finished.sort((a, b) => {\r\n            return a.index - b.index;\r\n          })\r\n        );\r\n        setUnfinishedTodos(\r\n          unfinished.sort((a, b) => {\r\n            return a.index - b.index;\r\n          })\r\n        );\r\n        setLoading(false);\r\n      });\r\n  }\r\n  function replaceDate(date) {\r\n    //this func takes date and removes the space and year from it...\r\n    return date.replace(/\\s\\d{4}/g, \"\");\r\n  }\r\n  function expandTodo(id, taskName, taskDesc, taskPri) {\r\n    //this function uses the parameters given by the particular todo triggering this function and sets those parameters equal to the state..then the modal is opened with these states as props\r\n    setExpandTaskName(taskName);\r\n    setExpandTaskDesc(taskDesc);\r\n    setExpandTaskPri(taskPri);\r\n    setExpandTaskId(id);\r\n    setOpenTodoModal(true);\r\n  }\r\n  function expandBlankTodo() {\r\n    //this opens a blank todo with no props regarding details of any todo\r\n    setExpandTaskName(\"\");\r\n    setExpandTaskDesc(\"\");\r\n    setExpandTaskPri(\"0\");\r\n    setExpandTaskId(\"\");\r\n    setOpenTodoModal(true);\r\n  }\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadData();\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [time, user]); //passed time here so that in yearly todos when i update the year data gets loaded again..\r\n\r\n  function priPosition() {\r\n    let reqPos = [];\r\n    for (let i = 3; i >= 0; i--) {\r\n      if (unfinishedTodos.length != 0){\r\n       for(let index=0; index<unfinishedTodos.length; index++){\r\n        if (i > unfinishedTodos[index].priority) {\r\n          reqPos.push([i, index]);\r\n          break;\r\n        }else if(index==unfinishedTodos.length-1){\r\n          reqPos.push([i, unfinishedTodos.length])\r\n        }\r\n      } \r\n      }else{\r\n        reqPos.push([i,0])\r\n      }\r\n    }\r\n    return reqPos;\r\n  }\r\n  console.log(unfinishedTodos)\r\n\r\n  function rearrangeList(props) {\r\n    //this func deals with changes the todo position on drag end and also saves the positions in firebase\r\n    if (props.destination != null) {\r\n      //this is evaluated true if drag isn't outside the draggable\r\n      let droppable = props.source.droppableId;\r\n      let initialPos = props.source.index;\r\n      let finalPos = props.destination.index;\r\n      if (droppable == \"unfinishedTodos\") {\r\n        let initialTaskPri = unfinishedTodos[initialPos].priority;\r\n        let finalTaskPri = unfinishedTodos[finalPos].priority;\r\n        if (initialTaskPri == finalTaskPri) {\r\n          //this condition ensures that item will be dropped only its interchanged with items of same priority\r\n          unfinishedTodos.splice(\r\n            finalPos,\r\n            0,\r\n            unfinishedTodos.splice(initialPos, 1)[0]\r\n          );\r\n          //splices removes the element from intial position and pastes it in new position\r\n\r\n          unfinishedTodos.forEach((each, index) => {\r\n            firebaseApp.firestore().collection(\"todos\").doc(each.id).update({\r\n              index: index,\r\n            });\r\n          });\r\n          //this saves the new list order in firebase\r\n        }\r\n      } else {\r\n        let initialTaskPri = finishedTodos[initialPos].priority;\r\n        let finalTaskPri = finishedTodos[finalPos].priority;\r\n        if (initialTaskPri == finalTaskPri) {\r\n          finishedTodos.splice(\r\n            finalPos,\r\n            0,\r\n            finishedTodos.splice(initialPos, 1)[0]\r\n          );\r\n          finishedTodos.forEach((each, index) => {\r\n            firebaseApp.firestore().collection(\"todos\").doc(each.id).update({\r\n              index: index,\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"allTodos\">\r\n      {openTodoModal ? (\r\n        <NewTodoModal\r\n          time={time}\r\n          shouldReload={() => loadData()}\r\n          openTodoModal={(shouldOpen) => setOpenTodoModal(shouldOpen)}\r\n          //this function can change the state which controls opening and closing of modal\r\n          taskId={expandTaskId}\r\n          taskName={expandTaskName}\r\n          taskDesc={expandTaskDesc}\r\n          taskPri={expandTaskPri}\r\n          lastPage={lastPage}\r\n          priPosition={priPosition()}\r\n          unfinishedTodos={unfinishedTodos}\r\n        />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <Navbar />\r\n      <div className=\"allTodosPage\">\r\n        <Sidebar />\r\n        <div\r\n          className={\r\n            lastPage == \"year\"\r\n              ? \"allTodosPageEmpty thisIsYear\"\r\n              : lastPage == \"longTerm\"\r\n              ? \"allTodosPageEmpty thisIsLongTerm\"\r\n              : \"allTodosPageEmpty\"\r\n          }\r\n        >\r\n          <div className=\"allTodosCont\">\r\n            <div className=\"topbar\">\r\n              {lastPage != \"longTerm\" && lastPage != \"year\" ? (\r\n                <IconButton\r\n                  title=\"Back\"\r\n                  onClick={() => history.push(`/${lastPage}`)}\r\n                >\r\n                  <ArrowBackIcon />\r\n                </IconButton>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              {lastPage != \"year\" ? (\r\n                <span className=\"time\">{replaceDate(time)}</span>\r\n              ) : (\r\n                <div className=\"modifiedYearPicker\">\r\n                  <YearPicker\r\n                    year={time}\r\n                    changeYear={(year) => setTime(year)}\r\n                  />\r\n                </div>\r\n              )}\r\n              <IconButton onClick={() => expandBlankTodo()} title=\"New Todo\">\r\n                <QueueIcon />\r\n              </IconButton>\r\n            </div>\r\n            {loading ? (\r\n              <Loading />\r\n            ) : unfinishedTodos.length != 0 || finishedTodos.length != 0 ? (\r\n              <div className=\"mainTodos\">\r\n                <DragDropContext\r\n                  onDragEnd={(props) => {\r\n                    rearrangeList(props);\r\n                  }}\r\n                >\r\n                  {unfinishedTodos.length != 0 ? (\r\n                    <div className=\"unfinishedTodos\">\r\n                      <div className=\"noUnfinished noTodos\">\r\n                        {unfinishedTodos.length} unfinished\r\n                      </div>\r\n                      <Droppable droppableId=\"unfinishedTodos\">\r\n                        {(provided) => (\r\n                          <div\r\n                            className=\"unfinishedTodosList\"\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                          >\r\n                            {unfinishedTodos.map((each, index) => (\r\n                              <EachTodo\r\n                                id={each.id}\r\n                                key={each.id}\r\n                                index={each.index}\r\n                                priority={each.priority}\r\n                                taskName={each.taskName}\r\n                                taskDesc={each.taskDesc}\r\n                                finished={each.finished}\r\n                                time={each.time}\r\n                                timeType={each.timeType}\r\n                                unfinishedTodos={unfinishedTodos}\r\n                                startLoading={() => loadData()}\r\n                                activateLoader={(shouldLoad) =>\r\n                                  setLoading(shouldLoad)\r\n                                }\r\n                                expandTodo={(id, taskName, taskDesc, taskPri) =>\r\n                                  expandTodo(id, taskName, taskDesc, taskPri)\r\n                                }\r\n                                sidebarTodo={false}\r\n                              />\r\n                            ))}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                </DragDropContext>\r\n                <DragDropContext\r\n                  onDragEnd={(props) => {\r\n                    rearrangeList(props);\r\n                  }}\r\n                >\r\n                  {finishedTodos.length != 0 ? (\r\n                    <div className=\"finishedTodos\">\r\n                      <div className=\"noFinished noTodos\">\r\n                        {finishedTodos.length} finished\r\n                      </div>\r\n                      <Droppable droppableId=\"finishedTodos\">\r\n                        {(provided) => (\r\n                          <div\r\n                            className=\"finishedTodosList\"\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                          >\r\n                            {finishedTodos.map((each, index) => (\r\n                              <EachTodo\r\n                                id={each.id}\r\n                                key={each.id}\r\n                                index={each.index}\r\n                                priority={each.priority}\r\n                                taskName={each.taskName}\r\n                                taskDesc={each.taskDesc}\r\n                                finished={each.finished}\r\n                                time={each.time}\r\n                                timeType={each.timeType}\r\n                                unfinishedTodos={unfinishedTodos}\r\n                                startLoading={() => loadData()}\r\n                                activateLoader={(shouldLoad) =>\r\n                                  setLoading(shouldLoad)\r\n                                }\r\n                                expandTodo={(id, taskName, taskDesc, taskPri) =>\r\n                                  expandTodo(id, taskName, taskDesc, taskPri)\r\n                                }\r\n                                sidebarTodo={false}\r\n                              />\r\n                            ))}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                </DragDropContext>\r\n              </div>\r\n            ) : (\r\n              //this is rendered if the length of both finished and unfinished todos is 0\r\n              <div className=\"noTodosMessage\">No tasks added yet!</div>\r\n            )}\r\n          </div>\r\n          {lastPage == \"year\" ? (\r\n            <IncompleteTodosSidebar timeType=\"year\" />\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllTodos;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js",["149","150","151","152","153","154"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js",["155","156","157","158","159","160","161","162"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js",["163","164","165","166"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport \"./Calendar.css\";\r\nimport { loadingContext } from \"../../loadingContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const months = {\r\n  0: \"January\",\r\n  1: \"February\",\r\n  2: \"March\",\r\n  3: \"April\",\r\n  4: \"May\",\r\n  5: \"June\",\r\n  6: \"July\",\r\n  7: \"August\",\r\n  8: \"September\",\r\n  9: \"October\",\r\n  10: \"November\",\r\n  11: \"December\",\r\n};\r\n\r\nfunction Calendar() {\r\n  const isLoading = useContext(loadingContext);\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const history = useHistory();\r\n  const getDaysIn = (year, month) => {\r\n    //this function returns the no of days in a particular month\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n  function formattedDate(date) {\r\n    //this function returns any specific date in the format i want which is dd/mm/yyyy\r\n    let day = date.getDate();\r\n    let month = date.getMonth();\r\n    let year = date.getFullYear();\r\n    return `${day}/${month + 1}/${year}`;\r\n  }\r\n  const weekDays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n  const getReqRows = () => {\r\n    //this function returns a giant list which contains several lists with each list representing a week in the month and having all dates in that week\r\n    let noPrevDays = new Date(currentYear, currentMonth, 1).getDay() - 1;\r\n    noPrevDays = noPrevDays === -1 ? 6 : noPrevDays;\r\n    //this var holds the value of no of days in previous month which appear in the first week of this month\r\n\r\n    let noNextDays =\r\n      7 -\r\n      new Date(\r\n        currentYear,\r\n        currentMonth,\r\n        getDaysIn(currentYear, currentMonth)\r\n      ).getDay();\r\n    noNextDays = noNextDays === 7 ? 0 : noNextDays;\r\n    //this var holds the value of no of days in next month which appear in the last week of this month\r\n\r\n    let prevDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth - 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    prevDays =\r\n      noPrevDays != 0 ? prevDays.slice(-noPrevDays, prevDays.length + 1) : [];\r\n    prevDays.forEach((name, index) => {\r\n      if (currentMonth > 0) {\r\n        prevDays[index] = `${prevDays[index]}/${currentMonth}/${currentYear}`;\r\n      } else {\r\n        prevDays[index] = `${prevDays[index]}/12/${currentYear - 1}`;\r\n      }\r\n    });\r\n    //var prevDays contains all dates which are in previous month but are present in the first week of this month\r\n\r\n    let nextDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth + 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    nextDays = nextDays.slice(0, noNextDays);\r\n    nextDays.forEach((name, index) => {\r\n      if (currentMonth + 1 <= 11) {\r\n        nextDays[index] = `${nextDays[index]}/${\r\n          currentMonth + 2\r\n        }/${currentYear}`;\r\n      } else {\r\n        nextDays[index] = `${nextDays[index]}/1/${currentYear + 1}`;\r\n      }\r\n    });\r\n    //var nextDays contains all dates which are in next month but are present in the last week of this month\r\n\r\n    let currentDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth)).keys(),\r\n    ].map((x) => x + 1);\r\n    currentDays.forEach((name, index) => {\r\n      currentDays[index] = `${currentDays[index]}/${\r\n        currentMonth + 1\r\n      }/${currentYear}`;\r\n    });\r\n    //var currentDays holds all the dates which are present in this month\r\n\r\n    let allDays = [...prevDays, ...currentDays, ...nextDays];\r\n    //allDays holds all dates in all weeks of current month\r\n\r\n    let horizontalList = [];\r\n    let i = 0;\r\n    while (i < allDays.length) {\r\n      //every 7 elements in allDays r pushed as a separate list(which represents a week) in horizontalList\r\n      horizontalList.push(allDays.slice(i, i + 7));\r\n      i = i + 7;\r\n    }\r\n    return horizontalList;\r\n  };\r\n\r\n  function changeId() {\r\n    //this function changes the id of td which contains today's date to today and those which contain dates of not this month to notThisMonth...cause i ve defined separate css for these classes\r\n\r\n    let allDates = document.getElementsByTagName(\"td\"); //gets all td elements which hold all dates of all the weeks in the currentMonth\r\n    let todayDate = formattedDate(new Date()); //gets today's date in format of dd/mm/yyyy\r\n    let today = document.getElementById(todayDate); //gets the element in html whose id matches today's date\r\n    if (today != null) {\r\n      today.id = \"today\"; //sets today as id of element with today's date as prev id\r\n    } else {\r\n    }\r\n    for (let each of allDates) {\r\n      //this loop goes through all elements in allDays, splits the id of every element and checks if the month is the current month or not..if its not the current month then the id is changed to notThisMonth\r\n      if (each.id.split(\"/\")[1] != currentMonth + 1 && each.id != \"today\") {\r\n        each.id = \"notThisMonth\";\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    changeId();\r\n  }, [isLoading, currentMonth]);\r\n  const increaseMonth = () => {\r\n    //this function increases the month and changes the month to jan of next year if the existing month is december\r\n    if (currentMonth + 1 <= 11) {\r\n      setCurrentMonth(currentMonth + 1);\r\n    } else {\r\n      setCurrentYear(currentYear + 1);\r\n      setCurrentMonth(0);\r\n    }\r\n  };\r\n\r\n  const decreaseMonth = () => {\r\n    //this function decreases the month and changes the month to december of previous year if the existing month is jan\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(currentMonth - 1);\r\n    } else {\r\n      setCurrentYear(currentYear - 1);\r\n      setCurrentMonth(11);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"topbar\">\r\n        <IconButton color=\"secondary\" onClick={() => decreaseMonth()}>\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <span className=\"topbarMonth\">\r\n          {months[currentMonth]}&nbsp;{currentYear}\r\n        </span>\r\n        <IconButton color=\"secondary\" onClick={() => increaseMonth()}>\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n      <table>\r\n        <tr>\r\n          {weekDays.map((day) => (\r\n            <th className=\"day\">{day}</th>\r\n          ))}\r\n        </tr>\r\n        {getReqRows().map((row) => (\r\n          <tr className=\"row\">\r\n            {/* each list in getReqRows is used as a row here */}\r\n            {row.map((date) => (\r\n              // each date in the list is used as id to td\r\n              <td id={date}>\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    history.push({\r\n                      pathname: \"daily/allTodos\",\r\n                      state: { time: date, lastPage: \"daily\" },\r\n                    })\r\n                  }\r\n                >\r\n                  {\r\n                    //the day part of the date is used here..\r\n                    date.split(\"/\")[0]\r\n                  }\r\n                </IconButton>\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n",["167","168"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js",[],["169","170"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js",["171"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js",["172"],"import React, { useState } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport IncompleteTodosSidebar from \"../IncompleteTodosSidebar/IncompleteTodosSidebar\";\r\nimport MonthCalendar from \"../MonthCalendar/MonthCalendar\";\r\nimport \"./Month.css\";\r\n\r\nfunction Month() {\r\n  return (\r\n    <div className=\"month\">\r\n      <Navbar />\r\n      <div className=\"monthPage\">\r\n        <Sidebar />\r\n        <div className=\"monthPageEmpty\">\r\n          <MonthCalendar/>\r\n          <IncompleteTodosSidebar timeType=\"month\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Month;\r\n",["173","174"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js",["175"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js",["176"],"import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Loading from \"./Components/Loading/Loading\";\r\nimport { loadingContext } from \"./loadingContext\";\r\n\r\nfunction PrivateRoute(props) {\r\n  const user = useContext(loadingContext);\r\n  return (\r\n    <Route\r\n      path={props.path}\r\n      render={(data) =>\r\n        user != null ? ( //if the user exists the componetn is rendered...\r\n          <props.component {...data}></props.component>\r\n        ) : user == false ? (\r\n          <Loading />\r\n        ) : (\r\n          //else the user is redirected to login page\r\n          <Redirect to={{ pathname: \"/login\" }}></Redirect>\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js",[],["177","178"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js",["179"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js",["180","181","182"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AllTodos from \"../AllTodos/AllTodos\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport \"./LongTerm.css\";\r\n\r\nfunction LongTerm() {\r\n  let history = useHistory()\r\n  history.push({\r\n    pathname: \"/longTerm/allTodos\",\r\n    state: { time: \"Long Term Goals🎯\", lastPage: \"longTerm\" },\r\n  })\r\n  return(\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default LongTerm;\r\n",["183","184"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js",["185","186","187","188"],"import React, { useState, forwardRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./Login.css\";\r\nimport google_logo from \"../../images/google_logo.png\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [wantsPassword, setWantsPassword] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(null);\r\n  const [openAlertModal, setOpenAlertModal] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(false);\r\n\r\n  const login = async () => {\r\n    setLoading(true); //this prompts to render the custom Loading component which is a loading circle\r\n    try {\r\n      await firebaseApp.auth().signInWithEmailAndPassword(email, password);\r\n      history.push(\"/daily\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setAlertMessage(error.message);\r\n      setOpenAlertModal(true);\r\n    }\r\n  };\r\n\r\n  const loginGoogle = async () => {\r\n    setLoading(true);\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    await firebaseApp\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setAlertMessage(error.message);\r\n        setOpenAlertModal(true);\r\n      });\r\n    history.push(\"/daily\");\r\n  };\r\n\r\n  const toggle = () => {\r\n    //this toggles the password field from password type(and enable visibilty button) and text type(and disable visibilty button)\r\n    setWantsPassword(!wantsPassword);\r\n    if (wantsPassword) {\r\n      return (document.getElementById(\"passwordField\").type = \"password\");\r\n    } else {\r\n      return (document.getElementById(\"passwordField\").type = \"text\");\r\n    }\r\n  };\r\n\r\n  return !loading ? (\r\n    <div className=\"login\">\r\n      <Dialog\r\n        open={openAlertModal}\r\n        onClose={() => setOpenAlertModal(false)}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{alertMessage}</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenAlertModal(false)} color=\"primary\">\r\n            Fine..\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Navbar />\r\n      <div className=\"loginPage\">\r\n        <div className=\"loginForm\">\r\n          <div className=\"field\">\r\n            <div className=\"fieldName\">Email</div>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              spellCheck=\"false\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"fieldName\">Password</div>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              id=\"passwordField\"\r\n              spellCheck=\"false\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <IconButton onClick={() => toggle()}>\r\n              {wantsPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <button className=\"loginButton\" onClick={login}>\r\n            Login\r\n          </button>\r\n          <button\r\n            className=\"loginButton googleLoginButton\"\r\n            onClick={loginGoogle}\r\n          >\r\n            <span>Login with</span>\r\n            <img src={google_logo} alt=\"\" />\r\n          </button>\r\n          <div className=\"signupText\">\r\n            Don't have an account?&nbsp;<Link to=\"/signup\">Signup</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js",["189","190","191"],"import { Button, IconButton } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./WeekCalendar.css\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { months } from \"../Calendar/Calendar\";\r\n\r\nfunction WeekCalendar() {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const history = useHistory();\r\n  const weekMonths = {\r\n    0: \"Jan\",\r\n    1: \"Feb\",\r\n    2: \"Mar\",\r\n    3: \"Apr\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"Aug\",\r\n    8: \"Sept\",\r\n    9: \"Oct\",\r\n    10: \"Nov\",\r\n    11: \"Dec\",\r\n  }; //these r the months for the week in mainTodos\r\n\r\n  const getWeekFormattedDate = (date) => {\r\n    //this converts the date to the format dd M yyyy\r\n    return `${date.getDate()} ${\r\n      weekMonths[date.getMonth()]\r\n    } ${date.getFullYear()}`;\r\n  };\r\n\r\n  function replaceDate(date) {\r\n    //this function removes space and year from the date\r\n    return date.replace(/\\s\\d{4}/g, \"\");\r\n  }\r\n\r\n  const getDaysIn = (year, month) => {\r\n    //this function returns the no of days in a particular month\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n\r\n  const increaseMonth = () => {\r\n    //this function increases the month and changes the month to jan of next year if the existing month is december\r\n    if (currentMonth + 1 <= 11) {\r\n      setCurrentMonth(currentMonth + 1);\r\n    } else {\r\n      setCurrentYear(currentYear + 1);\r\n      setCurrentMonth(0);\r\n    }\r\n  };\r\n\r\n  const decreaseMonth = () => {\r\n    //this function decreases the month and changes the month to december of previous year if the existing month is jan\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(currentMonth - 1);\r\n    } else {\r\n      setCurrentYear(currentYear - 1);\r\n      setCurrentMonth(11);\r\n    }\r\n  };\r\n\r\n  const getWeeks = () => {\r\n    //this function returns all the weeks in the current month\r\n\r\n    let noPrevDays = new Date(currentYear, currentMonth, 1).getDay() - 1;\r\n    noPrevDays = noPrevDays === -1 ? 6 : noPrevDays;\r\n    //this var holds the value of no of days in previous month which appear in the first week of this month\r\n\r\n    let noNextDays =\r\n      7 -\r\n      new Date(\r\n        currentYear,\r\n        currentMonth,\r\n        getDaysIn(currentYear, currentMonth)\r\n      ).getDay();\r\n    noNextDays = noNextDays === 7 ? 0 : noNextDays;\r\n    //this var holds the value of no of days in next month which appear in the last week of this month\r\n\r\n    let prevDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth - 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    prevDays =\r\n      noPrevDays != 0 ? prevDays.slice(-noPrevDays, prevDays.length + 1) : [];\r\n    prevDays.forEach((name, index) => {\r\n      if (currentMonth > 0) {\r\n        prevDays[index] = `${prevDays[index]} ${\r\n          weekMonths[currentMonth - 1]\r\n        } ${currentYear}`;\r\n      } else {\r\n        prevDays[index] = `${prevDays[index]} Dec ${currentYear - 1}`;\r\n      }\r\n    });\r\n    //var prevDays contains all dates which are in previous month but are present in the first week of this month\r\n\r\n    let nextDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth + 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    nextDays = nextDays.slice(0, noNextDays);\r\n    nextDays.forEach((name, index) => {\r\n      if (currentMonth + 1 <= 11) {\r\n        nextDays[index] = `${nextDays[index]} ${\r\n          weekMonths[currentMonth + 1]\r\n        } ${currentYear}`;\r\n      } else {\r\n        nextDays[index] = `${nextDays[index]} Jan ${currentYear + 1}`;\r\n      }\r\n    });\r\n    //var nextDays contains all dates which are in next month but are present in the last week of this month\r\n\r\n    let currentDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth)).keys(),\r\n    ].map((x) => x + 1);\r\n    currentDays.forEach((name, index) => {\r\n      currentDays[\r\n        index\r\n      ] = `${currentDays[index]} ${weekMonths[currentMonth]} ${currentYear}`;\r\n    });\r\n    //var currentDays holds all the dates which are present in this month\r\n\r\n    let allDays = [...prevDays, ...currentDays, ...nextDays];\r\n    //allDays holds all dates in all weeks of current month\r\n\r\n    let weeksList = [];\r\n    let today = getWeekFormattedDate(new Date());\r\n    for (let i=0; i < allDays.length; i = i + 7) {\r\n      //loops through a week\r\n      let foundToday = false;\r\n      for (let each of allDays.slice(i, i + 7)) {\r\n        //this loops through all days in this particular week\r\n        if (each == today) {\r\n          //when any day matches with today's date then the foundToday switch is turned true for this week\r\n          foundToday = true;\r\n        }\r\n      }\r\n      weeksList.push(\r\n        foundToday\r\n          ? `${allDays[i]}-${allDays[i + 6]}#currentWeek`\r\n          : `${allDays[i]}-${allDays[i + 6]}`\r\n        //if today's date lies in this week then foundToday ll be true and then the week ll be labelled as #currentWeek\r\n      );\r\n      foundToday = false; //foundToday is turned false before running the while loop for next week\r\n    }\r\n    return weeksList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"weekCalendar\">\r\n      <div className=\"topbar\">\r\n        <IconButton color=\"secondary\" onClick={() => decreaseMonth()}>\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <span className=\"topbarMonth\">\r\n          {months[currentMonth]}&nbsp;{currentYear}\r\n        </span>\r\n        <IconButton color=\"secondary\" onClick={() => increaseMonth()}>\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"allWeeks\">\r\n        {getWeeks().map((week) => (\r\n          <Button\r\n            className={\r\n              week.split(\"#\")[1] == \"currentWeek\"\r\n                ? \"eachWeek currentWeek\"\r\n                : \"eachWeek\"\r\n            }\r\n            onClick={() =>\r\n              history.push({\r\n                pathname: \"week/allTodos\",\r\n                state: { time: week.split(\"#\")[0], lastPage: \"week\" },\r\n              })\r\n            }\r\n          >\r\n            {replaceDate(week.split(\"#\")[0])}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeekCalendar;\r\n",["192","193"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\App.js",["194","195"],"import \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Landing from \"./Components/Landing/Landing\";\r\nimport Signup from \"./Components/Signup/Signup\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport Daily from \"./Components/Daily/Daily\";\r\nimport Notes from \"./Components/Notes/Notes\";\r\nimport firebaseApp from \"./firebase\";\r\nimport Loading from \"./Components/Loading/Loading\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport ClosedRoute from \"./ClosedRoute\";\r\nimport Week from \"./Components/Week/Week\";\r\nimport Month from \"./Components/Month/Month\";\r\nimport Year from \"./Components/Year/Year\";\r\nimport LongTerm from \"./Components/LongTerm/LongTerm\";\r\nimport VisionBoard from \"./Components/VisionBoard/VisionBoard\";\r\nimport { loadingContext } from \"./loadingContext\";\r\nimport AllTodos from \"./Components/AllTodos/AllTodos\";\r\n\r\n//this component handles all the routes\r\nfunction App() {\r\n  const [firebaseInitialized, setFirebaseInitialized] = useState(false);\r\n  useEffect(() => {\r\n    firebaseApp.auth().onAuthStateChanged((user) => {\r\n      //this function observes the state of authentication...returns none if user doesnt exist..returns true if the user exist..and returns false if the user is being created or loaded..\r\n      setFirebaseInitialized(user); //setting that user to predefined state\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        {/* passing the auth status in context provider */}\r\n        <loadingContext.Provider value={firebaseInitialized}>\r\n          <Switch>\r\n            <ClosedRoute exact path=\"/\" component={Landing} />\r\n            <ClosedRoute exact path=\"/signup\" component={Signup} />\r\n            <ClosedRoute exact path=\"/login\" component={Login} />\r\n            <PrivateRoute exact path=\"/daily\" component={Daily} />\r\n            <PrivateRoute exact path=\"/notes\" component={Notes} />\r\n            <PrivateRoute exact path=\"/daily\" component={Daily} />\r\n            <PrivateRoute exact path=\"/week\" component={Week} />\r\n            <PrivateRoute exact path=\"/month\" component={Month} />\r\n            <PrivateRoute exact path=\"/year\" component={Year} />\r\n            <PrivateRoute exact path=\"/longTerm\" component={LongTerm} />\r\n            <PrivateRoute exact path=\"/visionBoard\" component={VisionBoard} />\r\n            <PrivateRoute exact path=\"/:time/allTodos\" component={AllTodos} />\r\n          </Switch>\r\n        </loadingContext.Provider>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\YearPicker\\YearPicker.js",["196"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\firebase.js",[],["197","198"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Year\\Year.js",["199","200","201"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Navbar\\Navbar.js",["202"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Sidebar\\Sidebar.js",["203","204","205","206","207","208","209","210"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Daily\\Daily.js",["211"],"import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./Daily.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport addNotification from \"react-push-notification\";\r\nimport IncompleteTodosSidebar from \"../IncompleteTodosSidebar/IncompleteTodosSidebar\";\r\n\r\nfunction Daily() {\r\n  return (\r\n    <div className=\"daily\">\r\n      {/* this daily class encloses the entire page with navbar at its top */}\r\n      <Navbar />\r\n      <div className=\"dailyPage\">\r\n        {/* this dailyPage class encloses the part of the page below the navbar */}\r\n        <Sidebar />\r\n        <div className=\"dailyPageEmpty\">\r\n          {/* this  dailyPageEmpty class encloses the part of the page below the navbar and to the right of the sidebar */}\r\n          <Calendar />\r\n          <IncompleteTodosSidebar timeType=\"daily\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\loadingContext.js",[],["212","213"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\IncompleteTodosSidebar\\IncompleteTodosSidebar.js",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\MonthCalendar\\MonthCalendar.js",["231","232"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\VisionBoard\\VisionBoard.js",[],{"ruleId":"233","severity":1,"message":"234","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":51,"column":30,"nodeType":"239","messageId":"240","endLine":51,"endColumn":32},{"ruleId":"241","severity":1,"message":"242","line":108,"column":6,"nodeType":"243","endLine":108,"endColumn":18,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":113,"column":34,"nodeType":"247","messageId":"248","endLine":113,"endColumn":36},{"ruleId":"245","severity":1,"message":"249","line":118,"column":23,"nodeType":"247","messageId":"248","endLine":118,"endColumn":25},{"ruleId":"245","severity":1,"message":"249","line":137,"column":21,"nodeType":"247","messageId":"248","endLine":137,"endColumn":23},{"ruleId":"245","severity":1,"message":"249","line":140,"column":28,"nodeType":"247","messageId":"248","endLine":140,"endColumn":30},{"ruleId":"245","severity":1,"message":"249","line":159,"column":28,"nodeType":"247","messageId":"248","endLine":159,"endColumn":30},{"ruleId":"245","severity":1,"message":"249","line":198,"column":22,"nodeType":"247","messageId":"248","endLine":198,"endColumn":24},{"ruleId":"245","severity":1,"message":"249","line":200,"column":26,"nodeType":"247","messageId":"248","endLine":200,"endColumn":28},{"ruleId":"245","severity":1,"message":"246","line":207,"column":25,"nodeType":"247","messageId":"248","endLine":207,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":207,"column":51,"nodeType":"247","messageId":"248","endLine":207,"endColumn":53},{"ruleId":"245","severity":1,"message":"246","line":217,"column":25,"nodeType":"247","messageId":"248","endLine":217,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":233,"column":40,"nodeType":"247","messageId":"248","endLine":233,"endColumn":42},{"ruleId":"245","severity":1,"message":"246","line":233,"column":69,"nodeType":"247","messageId":"248","endLine":233,"endColumn":71},{"ruleId":"245","severity":1,"message":"246","line":240,"column":43,"nodeType":"247","messageId":"248","endLine":240,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":288,"column":41,"nodeType":"247","messageId":"248","endLine":288,"endColumn":43},{"ruleId":"245","severity":1,"message":"249","line":337,"column":21,"nodeType":"247","messageId":"248","endLine":337,"endColumn":23},{"ruleId":"233","severity":1,"message":"250","line":18,"column":18,"nodeType":"235","messageId":"236","endLine":18,"endColumn":27},{"ruleId":"245","severity":1,"message":"249","line":25,"column":20,"nodeType":"247","messageId":"248","endLine":25,"endColumn":22},{"ruleId":"245","severity":1,"message":"249","line":83,"column":21,"nodeType":"247","messageId":"248","endLine":83,"endColumn":23},{"ruleId":"245","severity":1,"message":"249","line":85,"column":28,"nodeType":"247","messageId":"248","endLine":85,"endColumn":30},{"ruleId":"245","severity":1,"message":"249","line":87,"column":28,"nodeType":"247","messageId":"248","endLine":87,"endColumn":30},{"ruleId":"245","severity":1,"message":"249","line":94,"column":21,"nodeType":"247","messageId":"248","endLine":94,"endColumn":23},{"ruleId":"233","severity":1,"message":"251","line":9,"column":17,"nodeType":"235","messageId":"236","endLine":9,"endColumn":26},{"ruleId":"245","severity":1,"message":"249","line":166,"column":30,"nodeType":"247","messageId":"248","endLine":166,"endColumn":32},{"ruleId":"245","severity":1,"message":"249","line":168,"column":30,"nodeType":"247","messageId":"248","endLine":168,"endColumn":32},{"ruleId":"245","severity":1,"message":"249","line":170,"column":30,"nodeType":"247","messageId":"248","endLine":170,"endColumn":32},{"ruleId":"245","severity":1,"message":"249","line":182,"column":30,"nodeType":"247","messageId":"248","endLine":182,"endColumn":32},{"ruleId":"245","severity":1,"message":"249","line":184,"column":30,"nodeType":"247","messageId":"248","endLine":184,"endColumn":32},{"ruleId":"245","severity":1,"message":"249","line":186,"column":30,"nodeType":"247","messageId":"248","endLine":186,"endColumn":32},{"ruleId":"245","severity":1,"message":"246","line":200,"column":28,"nodeType":"247","messageId":"248","endLine":200,"endColumn":30},{"ruleId":"245","severity":1,"message":"246","line":61,"column":18,"nodeType":"247","messageId":"248","endLine":61,"endColumn":20},{"ruleId":"245","severity":1,"message":"246","line":121,"column":33,"nodeType":"247","messageId":"248","endLine":121,"endColumn":35},{"ruleId":"245","severity":1,"message":"246","line":121,"column":64,"nodeType":"247","messageId":"248","endLine":121,"endColumn":66},{"ruleId":"241","severity":1,"message":"252","line":128,"column":6,"nodeType":"243","endLine":128,"endColumn":31,"suggestions":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"254","replacedBy":"258"},{"ruleId":"256","replacedBy":"259"},{"ruleId":"245","severity":1,"message":"249","line":14,"column":18,"nodeType":"247","messageId":"248","endLine":14,"endColumn":20},{"ruleId":"233","severity":1,"message":"260","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"254","replacedBy":"261"},{"ruleId":"256","replacedBy":"262"},{"ruleId":"233","severity":1,"message":"251","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"245","severity":1,"message":"249","line":14,"column":18,"nodeType":"247","messageId":"248","endLine":14,"endColumn":20},{"ruleId":"254","replacedBy":"263"},{"ruleId":"256","replacedBy":"264"},{"ruleId":"233","severity":1,"message":"265","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":20},{"ruleId":"233","severity":1,"message":"266","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":16},{"ruleId":"233","severity":1,"message":"267","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":14},{"ruleId":"233","severity":1,"message":"268","line":5,"column":8,"nodeType":"235","messageId":"236","endLine":5,"endColumn":15},{"ruleId":"254","replacedBy":"269"},{"ruleId":"256","replacedBy":"270"},{"ruleId":"233","severity":1,"message":"271","line":1,"column":27,"nodeType":"235","messageId":"236","endLine":1,"endColumn":37},{"ruleId":"233","severity":1,"message":"272","line":11,"column":3,"nodeType":"235","messageId":"236","endLine":11,"endColumn":16},{"ruleId":"233","severity":1,"message":"273","line":12,"column":3,"nodeType":"235","messageId":"236","endLine":12,"endColumn":20},{"ruleId":"233","severity":1,"message":"274","line":15,"column":3,"nodeType":"235","messageId":"236","endLine":15,"endColumn":8},{"ruleId":"245","severity":1,"message":"246","line":86,"column":18,"nodeType":"247","messageId":"248","endLine":86,"endColumn":20},{"ruleId":"245","severity":1,"message":"249","line":133,"column":18,"nodeType":"247","messageId":"248","endLine":133,"endColumn":20},{"ruleId":"245","severity":1,"message":"249","line":166,"column":34,"nodeType":"247","messageId":"248","endLine":166,"endColumn":36},{"ruleId":"254","replacedBy":"275"},{"ruleId":"256","replacedBy":"276"},{"ruleId":"233","severity":1,"message":"277","line":2,"column":25,"nodeType":"235","messageId":"236","endLine":2,"endColumn":30},{"ruleId":"233","severity":1,"message":"278","line":9,"column":8,"nodeType":"235","messageId":"236","endLine":9,"endColumn":15},{"ruleId":"233","severity":1,"message":"260","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"254","replacedBy":"279"},{"ruleId":"256","replacedBy":"280"},{"ruleId":"233","severity":1,"message":"267","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":14},{"ruleId":"233","severity":1,"message":"268","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":14,"column":18,"nodeType":"247","messageId":"248","endLine":14,"endColumn":20},{"ruleId":"245","severity":1,"message":"249","line":18,"column":29,"nodeType":"247","messageId":"248","endLine":18,"endColumn":31},{"ruleId":"233","severity":1,"message":"281","line":10,"column":10,"nodeType":"235","messageId":"236","endLine":10,"endColumn":20},{"ruleId":"282","severity":1,"message":"283","line":28,"column":9,"nodeType":"284","endLine":28,"endColumn":62},{"ruleId":"282","severity":1,"message":"283","line":31,"column":9,"nodeType":"284","endLine":31,"endColumn":62},{"ruleId":"282","severity":1,"message":"283","line":34,"column":9,"nodeType":"284","endLine":34,"endColumn":60},{"ruleId":"282","severity":1,"message":"283","line":37,"column":9,"nodeType":"284","endLine":37,"endColumn":62},{"ruleId":"282","severity":1,"message":"283","line":40,"column":9,"nodeType":"284","endLine":40,"endColumn":60},{"ruleId":"282","severity":1,"message":"283","line":43,"column":9,"nodeType":"284","endLine":43,"endColumn":68},{"ruleId":"282","severity":1,"message":"283","line":46,"column":9,"nodeType":"284","endLine":46,"endColumn":74},{"ruleId":"233","severity":1,"message":"285","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":23},{"ruleId":"254","replacedBy":"286"},{"ruleId":"256","replacedBy":"287"},{"ruleId":"233","severity":1,"message":"288","line":7,"column":10,"nodeType":"235","messageId":"236","endLine":7,"endColumn":16},{"ruleId":"237","severity":1,"message":"289","line":58,"column":35,"nodeType":"239","messageId":"290","endLine":58,"endColumn":37},{"ruleId":"245","severity":1,"message":"249","line":60,"column":26,"nodeType":"247","messageId":"248","endLine":60,"endColumn":28},{"ruleId":"245","severity":1,"message":"249","line":62,"column":33,"nodeType":"247","messageId":"248","endLine":62,"endColumn":35},{"ruleId":"245","severity":1,"message":"246","line":70,"column":25,"nodeType":"247","messageId":"248","endLine":70,"endColumn":27},{"ruleId":"245","severity":1,"message":"249","line":76,"column":33,"nodeType":"247","messageId":"248","endLine":76,"endColumn":35},{"ruleId":"245","severity":1,"message":"246","line":87,"column":25,"nodeType":"247","messageId":"248","endLine":87,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":90,"column":33,"nodeType":"247","messageId":"248","endLine":90,"endColumn":35},{"ruleId":"245","severity":1,"message":"249","line":97,"column":33,"nodeType":"247","messageId":"248","endLine":97,"endColumn":35},{"ruleId":"245","severity":1,"message":"246","line":107,"column":25,"nodeType":"247","messageId":"248","endLine":107,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":110,"column":33,"nodeType":"247","messageId":"248","endLine":110,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":132,"column":30,"nodeType":"239","messageId":"240","endLine":132,"endColumn":32},{"ruleId":"241","severity":1,"message":"291","line":158,"column":6,"nodeType":"243","endLine":158,"endColumn":12,"suggestions":"292"},{"ruleId":"245","severity":1,"message":"249","line":175,"column":25,"nodeType":"247","messageId":"248","endLine":175,"endColumn":27},{"ruleId":"245","severity":1,"message":"249","line":197,"column":27,"nodeType":"247","messageId":"248","endLine":197,"endColumn":29},{"ruleId":"245","severity":1,"message":"249","line":202,"column":28,"nodeType":"247","messageId":"248","endLine":202,"endColumn":30},{"ruleId":"245","severity":1,"message":"246","line":208,"column":30,"nodeType":"247","messageId":"248","endLine":208,"endColumn":32},{"ruleId":"245","severity":1,"message":"249","line":24,"column":44,"nodeType":"247","messageId":"248","endLine":24,"endColumn":46},{"ruleId":"245","severity":1,"message":"249","line":25,"column":59,"nodeType":"247","messageId":"248","endLine":25,"endColumn":61},"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["293"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'settaskId' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'changeId'. Either include it or remove the dependency array.",["294"],"no-native-reassign",["295"],"no-negated-in-lhs",["296"],["295"],["296"],"'useState' is defined but never used.",["295"],["296"],["295"],["296"],"'useHistory' is defined but never used.","'AllTodos' is defined but never used.","'Navbar' is defined but never used.","'Sidebar' is defined but never used.",["295"],["296"],"'forwardRef' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'Slide' is defined but never used.",["295"],["296"],"'Route' is defined but never used.","'Loading' is defined but never used.",["295"],["296"],"'IconButton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'addNotification' is defined but never used.",["295"],["296"],"'months' is defined but never used.","Array.prototype.sort() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'loadReqTodos'. Either include it or remove the dependency array.",["297"],{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},"Update the dependencies array to be: [loadData, time, user]",{"range":"304","text":"305"},"Update the dependencies array to be: [isLoading, currentMonth, changeId]",{"range":"306","text":"307"},"Update the dependencies array to be: [loadReqTodos, user]",{"range":"308","text":"309"},[4554,4566],"[loadData, time, user]",[5136,5161],"[isLoading, currentMonth, changeId]",[5699,5705],"[loadReqTodos, user]"]