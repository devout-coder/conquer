[{"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js":"1","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js":"2","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js":"3"},{"size":3658,"mtime":1607971010906,"results":"4","hashOfConfig":"5"},{"size":4185,"mtime":1607970237893,"results":"6","hashOfConfig":"5"},{"size":1037,"mtime":1607971108346,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1w9fij",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js",["16","17","18"],"import { Checkbox, IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport QueueIcon from \"@material-ui/icons/Queue\";\r\nimport NewTodoModal from \"../NewTodoModal/NewTodoModal\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport \"./AllTodos.css\";\r\nimport EachTodo from \"../EachTodo/EachTodo\";\r\n\r\nfunction AllTodos(props) {\r\n  const [reloadTodos, setReloadTodos] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const toDisplay = location.state.toDisplay;\r\n  const lastPage = location.state.lastPage;\r\n  const [finishedTodos, setFinishedTodos] = useState([]);\r\n  const [unfinishedTodos, setUnfinishedTodos] = useState([]);\r\n  function openModal() {\r\n    document.getElementsByClassName(\"modalBackground\")[0].style.visibility =\r\n      \"visible\";\r\n    document.getElementsByClassName(\"modal\")[0].style.opacity = \"100\";\r\n  }\r\n  function loadData() {\r\n    setLoading(true);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .where(\"user\", \"==\", firebaseApp.auth().currentUser.uid)\r\n      .where(\"time\", \"==\", toDisplay)\r\n      .orderBy(\"priority\", \"desc\")\r\n      .get()\r\n      .then((snap) => {\r\n        let finished = [];\r\n        let unfinished = [];\r\n        snap.docs.map((each) => {\r\n          let eachdict = {\r\n            id: each.id,\r\n            taskName: each.get(\"taskName\"),\r\n            taskDesc: each.get(\"taskDesc\"),\r\n            priority: each.get(\"priority\"),\r\n          };\r\n          if (each.get(\"finished\")) {\r\n            finished.push(eachdict);\r\n          } else {\r\n            unfinished.push(eachdict);\r\n          }\r\n        });\r\n        setFinishedTodos(finished);\r\n        setUnfinishedTodos(unfinished);\r\n      });\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    loadData();\r\n    setReloadTodos(false);\r\n  }, [reloadTodos]);\r\n  return !loading ? (\r\n    <div className=\"allTodos\">\r\n      <NewTodoModal\r\n        toDisplay={toDisplay}\r\n        shouldReload={(reload) => setReloadTodos(reload)}\r\n      />\r\n      <Navbar />\r\n      <div className=\"allTodosPage\">\r\n        <Sidebar />\r\n        <div className=\"allTodosPageEmpty\">\r\n          <div className=\"topbar\">\r\n            <IconButton\r\n              title=\"Back\"\r\n              onClick={() => history.push(`/${lastPage}`)}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            <span className=\"toDisplay\">{toDisplay}</span>\r\n            <IconButton onClick={() => openModal()} title=\"New Todo\">\r\n              <QueueIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"mainTodos\">\r\n            <div className=\"unfinishedTodos\">\r\n              <div className=\"noUnfinished noTodos\">\r\n                {unfinishedTodos.length} unfinished\r\n              </div>\r\n              <div className=\"unfinishedTodosList\">\r\n                {unfinishedTodos.map((each) => (\r\n                  <EachTodo priority={each.priority} taskName={each.taskName} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"finishedTodos\">\r\n              <div className=\"noFinished noTodos\">\r\n                {finishedTodos.length} finished\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n}\r\n\r\nexport default AllTodos;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js",["19","20","21","22","23"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport { ArrowBack, Save } from \"@material-ui/icons\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  NativeSelect,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport \"./NewTodoModal.css\";\r\nimport firebaseApp from \"../../firebase\";\r\n\r\nfunction NewTodoModal(props) {\r\n  const [pri, setPri] = useState(\"0\");\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskDesc, setTaskDesc] = useState(\"\");\r\n  function handleChange(event) {\r\n    setPri(event.target.value);\r\n  }\r\n  function closeModal() {\r\n    setTaskName(\"\");\r\n    setTaskDesc(\"\");\r\n    setPri(\"0\");\r\n    document.getElementsByClassName(\"modalBackground\")[0].style.visibility =\r\n      \"hidden\";\r\n    document.getElementsByClassName(\"modal\")[0].style.opacity = \"0\";\r\n  }\r\n  function togglePriorities() {\r\n    document.getElementById(\"prioritiesDropdown\").style.display = \"flex\";\r\n  }\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\r\n      \"MuiSelect-root\"\r\n    )[0].lastChild.style.display = \"none\";\r\n    if (pri == \"0\") {\r\n      document.getElementsByClassName(\r\n        \"MuiSelect-root\"\r\n      )[0].firstElementChild.style.display = \"block\";\r\n    }\r\n  }, [pri]);\r\n  function saveTodo() {\r\n    firebaseApp.firestore().collection(\"todos\").add({\r\n      taskName: taskName,\r\n      taskDesc: taskDesc,\r\n      time: props.toDisplay,\r\n      priority: pri,\r\n      user: firebaseApp.auth().currentUser.uid,\r\n      finished: false,\r\n    });\r\n    props.shouldReload(true)\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <div className=\"modalBackground\">\r\n      <div className=\"modal\">\r\n        <div className=\"modalTopbar\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"modalTaskName\"\r\n            placeholder=\"Task Name\"\r\n            spellCheck=\"false\"\r\n            value={taskName}\r\n            autoComplete=\"off\"\r\n            maxLength=\"25\"\r\n            onChange={(e) => setTaskName(e.target.value)}\r\n          />\r\n          <div className=\"modalButtons\">\r\n            <FormControl>\r\n              <Select value={pri} onChange={handleChange} displayEmpty>\r\n                <MenuItem value=\"3\" className=\"eachPriority\">\r\n                  <PriorityHighIcon\r\n                    id=\"highPriority\"\r\n                    style={{ color: \"#FF3131\" }}\r\n                  ></PriorityHighIcon>\r\n                  <span>High</span>\r\n                </MenuItem>\r\n                <MenuItem value=\"2\" className=\"eachPriority\">\r\n                  <PriorityHighIcon\r\n                    id=\"mediumPriority\"\r\n                    style={{ color: \"#464D8E\" }}\r\n                  ></PriorityHighIcon>\r\n                  <span>Medium</span>\r\n                </MenuItem>\r\n                <MenuItem value=\"1\" className=\"eachPriority\">\r\n                  <PriorityHighIcon\r\n                    id=\"lowPriority\"\r\n                    style={{ color: \"#11B421\" }}\r\n                  ></PriorityHighIcon>\r\n                  <span>Low</span>\r\n                </MenuItem>\r\n                <MenuItem value=\"0\" className=\"eachPriority\">\r\n                  <PriorityHighIcon></PriorityHighIcon>\r\n                  <span>No priority</span>\r\n                </MenuItem>\r\n              </Select>\r\n              <FormHelperText>Priority</FormHelperText>\r\n            </FormControl>\r\n            <IconButton\r\n              title=\"Back\"\r\n              id=\"modalBackButton\"\r\n              onClick={() => closeModal()}\r\n            >\r\n              <ArrowBack />\r\n            </IconButton>\r\n            <IconButton\r\n              title=\"Save\"\r\n              id=\"modalSaveButton\"\r\n              onClick={() => saveTodo()}\r\n            >\r\n              <Save />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <textarea\r\n          spellCheck=\"false\"\r\n          id=\"modalTaskDesc\"\r\n          placeholder=\"Task Description\"\r\n          value={taskDesc}\r\n          onChange={(e) => setTaskDesc(e.target.value)}\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTodoModal;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js",["24","25","26","27","28","29"],{"ruleId":"30","severity":1,"message":"31","line":1,"column":10,"nodeType":"32","messageId":"33","endLine":1,"endColumn":18},{"ruleId":"34","severity":1,"message":"35","line":40,"column":30,"nodeType":"36","messageId":"37","endLine":40,"endColumn":32},{"ruleId":"38","severity":1,"message":"39","line":61,"column":6,"nodeType":"40","endLine":61,"endColumn":19,"suggestions":"41"},{"ruleId":"30","severity":1,"message":"42","line":2,"column":10,"nodeType":"32","messageId":"33","endLine":2,"endColumn":20},{"ruleId":"30","severity":1,"message":"43","line":9,"column":3,"nodeType":"32","messageId":"33","endLine":9,"endColumn":13},{"ruleId":"30","severity":1,"message":"44","line":11,"column":3,"nodeType":"32","messageId":"33","endLine":11,"endColumn":15},{"ruleId":"30","severity":1,"message":"45","line":32,"column":12,"nodeType":"32","messageId":"33","endLine":32,"endColumn":28},{"ruleId":"46","severity":1,"message":"47","line":39,"column":13,"nodeType":"48","messageId":"49","endLine":39,"endColumn":15},{"ruleId":"46","severity":1,"message":"47","line":11,"column":28,"nodeType":"48","messageId":"49","endLine":11,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":13,"column":32,"nodeType":"48","messageId":"49","endLine":13,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":15,"column":32,"nodeType":"48","messageId":"49","endLine":15,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":25,"column":26,"nodeType":"48","messageId":"49","endLine":25,"endColumn":28},{"ruleId":"46","severity":1,"message":"47","line":27,"column":30,"nodeType":"48","messageId":"49","endLine":27,"endColumn":32},{"ruleId":"46","severity":1,"message":"47","line":29,"column":30,"nodeType":"48","messageId":"49","endLine":29,"endColumn":32},"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["50"],"'makeStyles' is defined but never used.","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'togglePriorities' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"51","fix":"52"},"Update the dependencies array to be: [loadData, reloadTodos]",{"range":"53","text":"54"},[2140,2153],"[loadData, reloadTodos]"]