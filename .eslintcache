[{"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js":"1","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js":"2","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js":"3","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js":"4","C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js":"5","C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js":"6","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js":"7","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js":"8","C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js":"9","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js":"10","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js":"11","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js":"12","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js":"13","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js":"14","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js":"15","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js":"16"},{"size":7306,"mtime":1608399242337,"results":"17","hashOfConfig":"18"},{"size":5789,"mtime":1608549795894,"results":"19","hashOfConfig":"18"},{"size":3409,"mtime":1608225747671,"results":"20","hashOfConfig":"21"},{"size":7333,"mtime":1608554700057,"results":"22","hashOfConfig":"18"},{"size":432,"mtime":1606211631092,"results":"23","hashOfConfig":"18"},{"size":479,"mtime":1606562827688,"results":"24","hashOfConfig":"21"},{"size":280,"mtime":1606645864913,"results":"25","hashOfConfig":"18"},{"size":4540,"mtime":1608462561564,"results":"26","hashOfConfig":"18"},{"size":481,"mtime":1606562839345,"results":"27","hashOfConfig":"21"},{"size":726,"mtime":1607261509856,"results":"28","hashOfConfig":"21"},{"size":506,"mtime":1608545113252,"results":"29","hashOfConfig":"18"},{"size":361,"mtime":1606506978725,"results":"30","hashOfConfig":"18"},{"size":292,"mtime":1606645871513,"results":"31","hashOfConfig":"18"},{"size":280,"mtime":1606645855964,"results":"32","hashOfConfig":"18"},{"size":4142,"mtime":1608462280896,"results":"33","hashOfConfig":"18"},{"size":5910,"mtime":1608578098049,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cqertl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"1w9fij",{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js",["72","73","74","75","76"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js",["77","78","79","80","81","82","83","84"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js",["85","86","87","88","89","90","91","92","93"],"import {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./EachTodo.css\";\r\nimport NewTodoModal from \"../NewTodoModal/NewTodoModal\";\r\n\r\nfunction EachTodo(props) {\r\n  const [checked, setChecked] = useState(props.finished);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const handleClickClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const checkUncheckfunc = (event) => {\r\n    setChecked(event.target.checked);\r\n    // props.activateLoader(true);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .doc(props.id)\r\n      .set(\r\n        {\r\n          finished: !checked ? true : false,\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        // console.log(\"check loading ended\");\r\n        props.startLoading();\r\n        // props.activateLoader(false);\r\n      });\r\n  };\r\n  function deleteTodo() {\r\n    handleClickClose();\r\n    // props.activateLoader(true);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .doc(props.id)\r\n      .delete()\r\n      .then(() => {\r\n        props.startLoading();\r\n        // props.activateLoader(false);\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"eachTodo\">\r\n      <Dialog\r\n        open={modalOpen}\r\n        onClose={handleClickClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure you want to delete this item from your list?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={handleClickClose} color=\"secondary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={deleteTodo} color=\"primary\" autoFocus>\r\n            Yeah\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Checkbox\r\n        style={{\r\n          color: props.finished\r\n            ? \"#474747\"\r\n            : props.priority == 3\r\n            ? \"#ff5151\"\r\n            : props.priority == 2\r\n            ? \"#7885fb\"\r\n            : props.priority == 1\r\n            ? \"#20e734\"\r\n            : \"rgba(198, 196, 196, 0.61)\",\r\n        }}\r\n        checked={checked}\r\n        onChange={checkUncheckfunc}\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n      <p\r\n        className={\r\n          props.finished\r\n            ? \"finishedTodo eachTodoTaskName\"\r\n            : props.priority == 3\r\n            ? \"highPriority eachTodoTaskName\"\r\n            : props.priority == 2\r\n            ? \"mediumPriority eachTodoTaskName\"\r\n            : props.priority == 1\r\n            ? \"lowPriority eachTodoTaskName\"\r\n            : \"noPriority eachTodoTaskName\"\r\n        }\r\n        onClick={() => {\r\n          props.expandTodo(\r\n            props.id,\r\n            props.taskName,\r\n            props.taskDesc,\r\n            props.priority\r\n          );\r\n        }}\r\n      >\r\n        {props.taskName}\r\n      </p>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <DeleteIcon\r\n          style={{\r\n            color: \"#FF3131\",\r\n          }}\r\n        />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EachTodo;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js",["94","95","96","97"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport \"./Calendar.css\";\r\nimport { loadingContext } from \"../../loadingContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Calendar() {\r\n  const isLoading = useContext(loadingContext);\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const history = useHistory();\r\n  const months = {\r\n    0: \"January\",\r\n    1: \"February\",\r\n    2: \"March\",\r\n    3: \"April\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"August\",\r\n    8: \"September\",\r\n    9: \"October\",\r\n    10: \"November\",\r\n    11: \"December\",\r\n  };\r\n  const getDaysIn = (year, month) => {\r\n    //this function returns the no of days in a particular month\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n  function formattedDate(date) {\r\n    //this function returns any specific date in the format i want which is dd/mm/yyyy\r\n    let day = date.getDate();\r\n    let month = date.getMonth();\r\n    let year = date.getFullYear();\r\n    return `${day}/${month + 1}/${year}`;\r\n  }\r\n  const weekDays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n  const getReqRows = () => {\r\n    //this function returns a giant list which contains several lists with each list representing a week in the month and having all dates in that week\r\n    let noPrevDays = new Date(currentYear, currentMonth, 1).getDay() - 1;\r\n    noPrevDays = noPrevDays === -1 ? 6 : noPrevDays;\r\n    //this var holds the value of no of days in previous month which appear in the first week of this month\r\n\r\n    let noNextDays =\r\n      7 -\r\n      new Date(\r\n        currentYear,\r\n        currentMonth,\r\n        getDaysIn(currentYear, currentMonth)\r\n      ).getDay();\r\n    noNextDays = noNextDays === 7 ? 0 : noNextDays;\r\n    //this var holds the value of no of days in next month which appear in the last week of this month\r\n\r\n    let prevDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth - 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    prevDays =\r\n      noPrevDays != 0 ? prevDays.slice(-noPrevDays, prevDays.length + 1) : [];\r\n    prevDays.forEach((name, index) => {\r\n      if (currentMonth > 0) {\r\n        prevDays[index] = `${prevDays[index]}/${currentMonth}/${currentYear}`;\r\n      } else {\r\n        prevDays[index] = `${prevDays[index]}/12/${currentYear - 1}`;\r\n      }\r\n    });\r\n    //var prevDays contains all dates which are in previous month but are present in the first week of this month\r\n\r\n    let nextDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth + 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    nextDays = nextDays.slice(0, noNextDays);\r\n    nextDays.forEach((name, index) => {\r\n      if (currentMonth + 1 <= 11) {\r\n        nextDays[index] = `${nextDays[index]}/${\r\n          currentMonth + 2\r\n        }/${currentYear}`;\r\n      } else {\r\n        nextDays[index] = `${nextDays[index]}/1/${currentYear + 1}`;\r\n      }\r\n    });\r\n    //var nextDays contains all dates which are in next month but are present in the last week of this month\r\n\r\n    let currentDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth)).keys(),\r\n    ].map((x) => x + 1);\r\n    currentDays.forEach((name, index) => {\r\n      currentDays[index] = `${currentDays[index]}/${\r\n        currentMonth + 1\r\n      }/${currentYear}`;\r\n    });\r\n    //var currentDays holds all the dates which are present in this month\r\n\r\n    let allDays = [...prevDays, ...currentDays, ...nextDays];\r\n    //allDays holds all dates in all weeks of current month\r\n\r\n    let horizontalList = [];\r\n    let i = 0;\r\n    while (i < allDays.length) {\r\n      //every 7 elements in allDays r pushed as a separate list(which represents a week) in horizontalList\r\n      horizontalList.push(allDays.slice(i, i + 7));\r\n      i = i + 7;\r\n    }\r\n    return horizontalList;\r\n  };\r\n\r\n  function changeId() {\r\n    //this function changes the id of td which contains today's date to today and those which contain dates of not this month to notThisMonth...cause i ve defined separate css for these classes\r\n\r\n    let allDates = document.getElementsByTagName(\"td\"); //gets all td elements which hold all dates of all the weeks in the currentMonth\r\n    let todayDate = formattedDate(new Date()); //gets today's date in format of dd/mm/yyyy\r\n    let today = document.getElementById(todayDate); //gets the element in html whose id matches today's date\r\n    if (today != null) {\r\n      today.id = \"today\"; //sets today as id of element with today's date as prev id\r\n    } else {\r\n    }\r\n    for (let each of allDates) {\r\n      //this loop goes through all elements in allDays, splits the id of every element and checks if the month is the current month or not..if its not the current month then the id is changed to notThisMonth\r\n      if (each.id.split(\"/\")[1] != currentMonth + 1 && each.id != \"today\") {\r\n        each.id = \"notThisMonth\";\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    changeId();\r\n  }, [isLoading, currentMonth]);\r\n  const increaseMonth = () => { \r\n    //this function increases the month and changes the month to jan of next year if the existing month is december\r\n    if (currentMonth + 1 <= 11) {\r\n      setCurrentMonth(currentMonth + 1);\r\n    } else {\r\n      setCurrentYear(currentYear + 1);\r\n      setCurrentMonth(0);\r\n    }\r\n  };\r\n\r\n  const decreaseMonth = () => {\r\n    //this function decreases the month and changes the month to december of previous year if the existing month is jan\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(currentMonth - 1);\r\n    } else {\r\n      setCurrentYear(currentYear - 1);\r\n      setCurrentMonth(11);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"topbar\">\r\n        <IconButton color=\"secondary\" onClick={() => decreaseMonth()}>\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <span className=\"topbarMonth\">\r\n          {months[currentMonth]}&nbsp;{currentYear}\r\n        </span>\r\n        <IconButton color=\"secondary\" onClick={() => increaseMonth()}>\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n      <table>\r\n        <tr>\r\n          {weekDays.map((day) => (\r\n            <th className=\"day\">{day}</th>\r\n          ))}\r\n        </tr>\r\n        {getReqRows().map((row) => (\r\n          <tr className=\"row\">\r\n            {/* each list in getReqRows is used as a row here */}\r\n            {row.map((date) => (\r\n              // each date in the list is used as id to td\r\n              <td id={date}>\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    history.push({\r\n                      pathname: \"daily/allTodos\",\r\n                      state: { time: date, lastPage: \"daily\" },\r\n                    })\r\n                  }\r\n                >\r\n                  {\r\n                    //the day part of the date is used here..\r\n                    date.split(\"/\")[0]\r\n                  }\r\n                </IconButton>\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js",[],["98","99"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js",["100"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js",["101"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js",[],["102","103"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js",["104","105","106","107"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js",["108","109","110","111"],"import { IconButton } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./WeekCalendar.css\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction WeekCalendar() {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const history = useHistory();\r\n  const weekMonths = {\r\n    0: \"Jan\",\r\n    1: \"Feb\",\r\n    2: \"Mar\",\r\n    3: \"Apr\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"Aug\",\r\n    8: \"Sept\",\r\n    9: \"Oct\",\r\n    10: \"Nov\",\r\n    11: \"Dec\",\r\n  };\r\n  const months = {\r\n    0: \"January\",\r\n    1: \"February\",\r\n    2: \"March\",\r\n    3: \"April\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"August\",\r\n    8: \"September\",\r\n    9: \"October\",\r\n    10: \"November\",\r\n    11: \"December\",\r\n  };\r\n  const getWeekFormattedDate = (date) => {\r\n    return `${date.getDate()} ${\r\n      weekMonths[date.getMonth()]\r\n    } ${date.getFullYear()}`;\r\n  };\r\n  const getDaysIn = (year, month) => {\r\n    //this function returns the no of days in a particular month\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n  const increaseMonth = () => {\r\n    //this function increases the month and changes the month to jan of next year if the existing month is december\r\n    if (currentMonth + 1 <= 11) {\r\n      setCurrentMonth(currentMonth + 1);\r\n    } else {\r\n      setCurrentYear(currentYear + 1);\r\n      setCurrentMonth(0);\r\n    }\r\n  };\r\n\r\n  const decreaseMonth = () => {\r\n    //this function decreases the month and changes the month to december of previous year if the existing month is jan\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(currentMonth - 1);\r\n    } else {\r\n      setCurrentYear(currentYear - 1);\r\n      setCurrentMonth(11);\r\n    }\r\n  };\r\n\r\n  const getWeeks = () => {\r\n    //this function returns all the weeks in the current month\r\n    let noPrevDays = new Date(currentYear, currentMonth, 1).getDay() - 1;\r\n    noPrevDays = noPrevDays === -1 ? 6 : noPrevDays;\r\n    //this var holds the value of no of days in previous month which appear in the first week of this month\r\n\r\n    let noNextDays =\r\n      7 -\r\n      new Date(\r\n        currentYear,\r\n        currentMonth,\r\n        getDaysIn(currentYear, currentMonth)\r\n      ).getDay();\r\n    noNextDays = noNextDays === 7 ? 0 : noNextDays;\r\n    //this var holds the value of no of days in next month which appear in the last week of this month\r\n\r\n    let prevDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth - 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    prevDays =\r\n      noPrevDays != 0 ? prevDays.slice(-noPrevDays, prevDays.length + 1) : [];\r\n    prevDays.forEach((name, index) => {\r\n      if (currentMonth > 0) {\r\n        prevDays[index] = `${prevDays[index]} ${\r\n          weekMonths[currentMonth - 1]\r\n        } ${currentYear}`;\r\n      } else {\r\n        prevDays[index] = `${prevDays[index]} Dec ${currentYear - 1}`;\r\n      }\r\n    });\r\n    //var prevDays contains all dates which are in previous month but are present in the first week of this month\r\n\r\n    let nextDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth + 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    nextDays = nextDays.slice(0, noNextDays);\r\n    nextDays.forEach((name, index) => {\r\n      if (currentMonth + 1 <= 11) {\r\n        nextDays[index] = `${nextDays[index]} ${\r\n          weekMonths[currentMonth + 1]\r\n        } ${currentYear}`;\r\n      } else {\r\n        nextDays[index] = `${nextDays[index]} Jan ${currentYear + 1}`;\r\n      }\r\n    });\r\n    //var nextDays contains all dates which are in next month but are present in the last week of this month\r\n\r\n    let currentDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth)).keys(),\r\n    ].map((x) => x + 1);\r\n    currentDays.forEach((name, index) => {\r\n      currentDays[\r\n        index\r\n      ] = `${currentDays[index]} ${weekMonths[currentMonth]} ${currentYear}`;\r\n    });\r\n    //var currentDays holds all the dates which are present in this month\r\n\r\n    let allDays = [...prevDays, ...currentDays, ...nextDays];\r\n    //allDays holds all dates in all weeks of current month\r\n    let weeksList = [];\r\n    let i = 0;\r\n    let today = getWeekFormattedDate(new Date());\r\n    function replaceDate(date) {\r\n      return date.replace(/\\s\\d{4}/, \"\");\r\n    }\r\n    while (i < allDays.length) {\r\n      //every 7 elements in allDays r pushed as a separate list(which represents a week) in horizontalList\r\n\r\n      let foundToday = false;\r\n      for (let each of allDays.slice(i, i + 7)) {\r\n        if (each == today) {\r\n          foundToday = true;\r\n        }\r\n      }\r\n      weeksList.push(\r\n        foundToday\r\n          ? `${replaceDate(allDays[i])}-${replaceDate(\r\n              allDays[i + 6]\r\n            )}#currentWeek`\r\n          : `${replaceDate(allDays[i])}-${replaceDate(allDays[i + 6])}`\r\n      );\r\n      foundToday = false;\r\n      i = i + 7;\r\n    }\r\n    return weeksList;\r\n  };\r\n  \r\n  return (\r\n    <div className=\"weekCalendar\">\r\n      <div className=\"topbar\">\r\n        <IconButton color=\"secondary\" onClick={() => decreaseMonth()}>\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <span className=\"topbarMonth\">\r\n          {months[currentMonth]}&nbsp;{currentYear}\r\n        </span>\r\n        <IconButton color=\"secondary\" onClick={() => increaseMonth()}>\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"allWeeks\">\r\n        {getWeeks().map((week) => (\r\n          <div\r\n            className={\r\n              week.split(\"#\")[1] == \"currentWeek\"\r\n                ? \"eachWeek currentWeek\"\r\n                : \"eachWeek\"\r\n            }\r\n          >\r\n            {week.split(\"#\")[0]}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeekCalendar;\r\n",{"ruleId":"112","severity":1,"message":"113","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":43,"column":30,"nodeType":"118","messageId":"119","endLine":43,"endColumn":32},{"ruleId":"120","severity":1,"message":"121","line":82,"column":6,"nodeType":"122","endLine":82,"endColumn":8,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":116,"column":35,"nodeType":"126","messageId":"127","endLine":116,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":116,"column":64,"nodeType":"126","messageId":"127","endLine":116,"endColumn":66},{"ruleId":"112","severity":1,"message":"128","line":8,"column":3,"nodeType":"114","messageId":"115","endLine":8,"endColumn":13},{"ruleId":"112","severity":1,"message":"129","line":10,"column":3,"nodeType":"114","messageId":"115","endLine":10,"endColumn":15},{"ruleId":"112","severity":1,"message":"130","line":20,"column":18,"nodeType":"114","messageId":"115","endLine":20,"endColumn":27},{"ruleId":"124","severity":1,"message":"131","line":31,"column":17,"nodeType":"126","messageId":"127","endLine":31,"endColumn":19},{"ruleId":"120","severity":1,"message":"132","line":39,"column":6,"nodeType":"122","endLine":39,"endColumn":15,"suggestions":"133"},{"ruleId":"124","severity":1,"message":"131","line":92,"column":20,"nodeType":"126","messageId":"127","endLine":92,"endColumn":22},{"ruleId":"124","severity":1,"message":"131","line":94,"column":25,"nodeType":"126","messageId":"127","endLine":94,"endColumn":27},{"ruleId":"124","severity":1,"message":"131","line":96,"column":25,"nodeType":"126","messageId":"127","endLine":96,"endColumn":27},{"ruleId":"112","severity":1,"message":"134","line":6,"column":3,"nodeType":"114","messageId":"115","endLine":6,"endColumn":16},{"ruleId":"112","severity":1,"message":"135","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":20},{"ruleId":"112","severity":1,"message":"136","line":15,"column":8,"nodeType":"114","messageId":"115","endLine":15,"endColumn":20},{"ruleId":"124","severity":1,"message":"131","line":82,"column":30,"nodeType":"126","messageId":"127","endLine":82,"endColumn":32},{"ruleId":"124","severity":1,"message":"131","line":84,"column":30,"nodeType":"126","messageId":"127","endLine":84,"endColumn":32},{"ruleId":"124","severity":1,"message":"131","line":86,"column":30,"nodeType":"126","messageId":"127","endLine":86,"endColumn":32},{"ruleId":"124","severity":1,"message":"131","line":98,"column":30,"nodeType":"126","messageId":"127","endLine":98,"endColumn":32},{"ruleId":"124","severity":1,"message":"131","line":100,"column":30,"nodeType":"126","messageId":"127","endLine":100,"endColumn":32},{"ruleId":"124","severity":1,"message":"131","line":102,"column":30,"nodeType":"126","messageId":"127","endLine":102,"endColumn":32},{"ruleId":"124","severity":1,"message":"125","line":60,"column":18,"nodeType":"126","messageId":"127","endLine":60,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":120,"column":33,"nodeType":"126","messageId":"127","endLine":120,"endColumn":35},{"ruleId":"124","severity":1,"message":"125","line":120,"column":64,"nodeType":"126","messageId":"127","endLine":120,"endColumn":66},{"ruleId":"120","severity":1,"message":"137","line":127,"column":6,"nodeType":"122","endLine":127,"endColumn":31,"suggestions":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"112","severity":1,"message":"143","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"144","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":20},{"ruleId":"139","replacedBy":"145"},{"ruleId":"141","replacedBy":"146"},{"ruleId":"112","severity":1,"message":"147","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":37},{"ruleId":"112","severity":1,"message":"134","line":11,"column":3,"nodeType":"114","messageId":"115","endLine":11,"endColumn":16},{"ruleId":"112","severity":1,"message":"135","line":12,"column":3,"nodeType":"114","messageId":"115","endLine":12,"endColumn":20},{"ruleId":"112","severity":1,"message":"148","line":15,"column":3,"nodeType":"114","messageId":"115","endLine":15,"endColumn":8},{"ruleId":"112","severity":1,"message":"149","line":11,"column":9,"nodeType":"114","messageId":"115","endLine":11,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":89,"column":18,"nodeType":"126","messageId":"127","endLine":89,"endColumn":20},{"ruleId":"124","severity":1,"message":"131","line":139,"column":18,"nodeType":"126","messageId":"127","endLine":139,"endColumn":20},{"ruleId":"124","severity":1,"message":"131","line":173,"column":34,"nodeType":"126","messageId":"127","endLine":173,"endColumn":36},"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["150"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'settaskId' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'displayPriProperly'. Either include it or remove the dependency array.",["151"],"'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'NewTodoModal' is defined but never used.","React Hook useEffect has a missing dependency: 'changeId'. Either include it or remove the dependency array.",["152"],"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"'useEffect' is defined but never used.","'useHistory' is defined but never used.",["153"],["154"],"'forwardRef' is defined but never used.","'Slide' is defined but never used.","'history' is assigned a value but never used.",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [loadData]",{"range":"161","text":"162"},"Update the dependencies array to be: [displayPriProperly, taskPri]",{"range":"163","text":"164"},"Update the dependencies array to be: [isLoading, currentMonth, changeId]",{"range":"165","text":"166"},[3684,3686],"[loadData]",[1272,1281],"[displayPriProperly, taskPri]",[5155,5180],"[isLoading, currentMonth, changeId]"]