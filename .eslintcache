[{"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js":"1","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js":"2","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js":"3","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js":"4","C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js":"5","C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js":"6","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js":"7","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js":"8","C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js":"9","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js":"10","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js":"11","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js":"12","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js":"13","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js":"14","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js":"15","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js":"16","C:\\Users\\Pranil\\pranil\\conquer\\src\\App.js":"17","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\YearPicker\\YearPicker.js":"18","C:\\Users\\Pranil\\pranil\\conquer\\src\\firebase.js":"19","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Year\\Year.js":"20","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Navbar\\Navbar.js":"21","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Sidebar\\Sidebar.js":"22","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Daily\\Daily.js":"23","C:\\Users\\Pranil\\pranil\\conquer\\src\\loadingContext.js":"24","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\IncompleteTodosSidebar\\IncompleteTodosSidebar.js":"25","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\MonthCalendar\\MonthCalendar.js":"26"},{"size":8650,"mtime":1609435121512,"results":"27","hashOfConfig":"28"},{"size":5847,"mtime":1609416358999,"results":"29","hashOfConfig":"28"},{"size":3759,"mtime":1609435614743,"results":"30","hashOfConfig":"28"},{"size":7313,"mtime":1608977428472,"results":"31","hashOfConfig":"28"},{"size":432,"mtime":1606211631092,"results":"32","hashOfConfig":"28"},{"size":583,"mtime":1608394353873,"results":"33","hashOfConfig":"28"},{"size":635,"mtime":1609166167102,"results":"34","hashOfConfig":"28"},{"size":4540,"mtime":1608462561564,"results":"35","hashOfConfig":"28"},{"size":575,"mtime":1608579454300,"results":"36","hashOfConfig":"28"},{"size":726,"mtime":1607261509856,"results":"37","hashOfConfig":"28"},{"size":657,"mtime":1609165535988,"results":"38","hashOfConfig":"28"},{"size":361,"mtime":1608977732666,"results":"39","hashOfConfig":"28"},{"size":478,"mtime":1608737927651,"results":"40","hashOfConfig":"28"},{"size":280,"mtime":1608986854281,"results":"41","hashOfConfig":"28"},{"size":4142,"mtime":1608462280896,"results":"42","hashOfConfig":"28"},{"size":6286,"mtime":1609062677899,"results":"43","hashOfConfig":"28"},{"size":2723,"mtime":1608907819853,"results":"44","hashOfConfig":"28"},{"size":901,"mtime":1608987592988,"results":"45","hashOfConfig":"28"},{"size":536,"mtime":1606213557623,"results":"46","hashOfConfig":"28"},{"size":405,"mtime":1608745772903,"results":"47","hashOfConfig":"28"},{"size":907,"mtime":1609410557584,"results":"48","hashOfConfig":"28"},{"size":1923,"mtime":1608986720942,"results":"49","hashOfConfig":"28"},{"size":948,"mtime":1609154573066,"results":"50","hashOfConfig":"28"},{"size":170,"mtime":1608394061967,"results":"51","hashOfConfig":"28"},{"size":4744,"mtime":1609435691037,"results":"52","hashOfConfig":"28"},{"size":1892,"mtime":1609166267346,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cqertl",{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js",["114","115","116","117","118","119","120","121","122","123"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js",["124","125","126","127","128","129"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js",["130","131","132","133","134","135"],"import {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./EachTodo.css\";\r\n\r\nfunction EachTodo(props) {\r\n  const [checked, setChecked] = useState(props.finished);\r\n  const [modalOpen, setModalOpen] = useState(false); //this state controls the delete modal\r\n\r\n  const checkUncheckfunc = (event) => {\r\n    //this toggles check of todo checkbox and also toggles boolean value of finished property of that particular todo in firestore\r\n    setChecked(event.target.checked);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .doc(props.id)\r\n      .set(\r\n        {\r\n          finished: !checked ? true : false, //this seems contradictory but due to some reason value of checked is false when i check it and true when i uncheck\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        props.startLoading(); //this triggers that loadData func in allTodos which fetches all todos again\r\n      });\r\n  };\r\n  function deleteTodo() {\r\n    //this func deletes that particular todo\r\n    setModalOpen(false);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .doc(props.id)\r\n      .delete()\r\n      .then(() => {\r\n        props.startLoading();\r\n      });\r\n  }\r\n  console.log(props.time)\r\n  return (\r\n    <div className=\"eachTodo\">\r\n      <Dialog\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure you want to delete this item from your list?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setModalOpen(false)} color=\"secondary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={deleteTodo} color=\"primary\" autoFocus>\r\n            Yeah\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Checkbox\r\n        style={{\r\n          color: props.finished\r\n            ? \"#474747\"\r\n            : props.priority == 3\r\n            ? \"#ff5151\"\r\n            : props.priority == 2\r\n            ? \"#7885fb\"\r\n            : props.priority == 1\r\n            ? \"#20e734\"\r\n            : \"rgba(198, 196, 196, 0.61)\",//different color based on priority\r\n        }}\r\n        checked={checked}\r\n        onChange={checkUncheckfunc}\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n      <p\r\n        className={\r\n          props.finished\r\n            ? \"finishedTodo eachTodoTaskName\"\r\n            : props.priority == 3\r\n            ? \"highPriority eachTodoTaskName\"\r\n            : props.priority == 2\r\n            ? \"mediumPriority eachTodoTaskName\"\r\n            : props.priority == 1\r\n            ? \"lowPriority eachTodoTaskName\"\r\n            : \"noPriority eachTodoTaskName\"\r\n        }\r\n        onClick={() => {\r\n          props.expandTodo(//this triggers the func in all todos which renders the todo modal with all these parameters as props\r\n            props.id,\r\n            props.taskName,\r\n            props.taskDesc,\r\n            props.priority,\r\n            props.time,\r\n            props.timeType\r\n          );\r\n        }}\r\n      >\r\n        {props.taskName}\r\n      </p>\r\n      {props.sidebarTodo?(\r\n        <span className=\"todoTime\" >{props.time}</span>\r\n      ):(\r\n        <div></div>\r\n      )}\r\n      <IconButton onClick={() => setModalOpen(true)}>\r\n        <DeleteIcon\r\n          style={{\r\n            color: \"#FF3131\",\r\n          }}\r\n        />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EachTodo;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js",["136","137","138","139"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js",[],["140","141"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js",[],["142","143"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js",["144"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js",["145"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./Signup.css\";\r\nimport google_logo from \"../../images/google_logo.png\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { Button, Dialog, DialogActions, DialogTitle, IconButton } from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Signup() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [wantsPassword, setWantsPassword] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [openAlertModal, setOpenAlertModal] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(false);\r\n\r\n  const signUp = async (e) => {\r\n    setLoading(true); //this prompts to render the custom Loading component which is a loading circle\r\n    try {\r\n      await firebaseApp.auth().createUserWithEmailAndPassword(email, password);\r\n      await firebaseApp\r\n        .auth()\r\n        .currentUser.updateProfile({ displayName: username });\r\n      history.push(\"/daily\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setAlertMessage(error.message);\r\n      setOpenAlertModal(true);\r\n    }\r\n  };\r\n\r\n  const signUpgoogle = async () => {\r\n    setLoading(true);\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    await firebaseApp\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setAlertMessage(error.message);\r\n        setOpenAlertModal(true);\r\n      });\r\n    history.push(\"/daily\");\r\n  };\r\n\r\n  const toggle = () => {\r\n    //this toggles the password field from password type(and enable visibilty button) and text type(and disable visibilty button)\r\n    setWantsPassword(!wantsPassword);\r\n    if (wantsPassword) {\r\n      return (document.getElementById(\"passwordField\").type = \"password\");\r\n    } else {\r\n      return (document.getElementById(\"passwordField\").type = \"text\");\r\n    }\r\n  };\r\n\r\n  return !loading ? (\r\n    <div className=\"signup\">\r\n      <Dialog\r\n        open={openAlertModal}\r\n        onClose={() => setOpenAlertModal(false)}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{alertMessage}</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenAlertModal(false)} color=\"primary\">\r\n            Fine..\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Navbar />\r\n      <div className=\"signupPage\">\r\n        <div className=\"signupForm\">\r\n          <div className=\"field\">\r\n            <div className=\"fieldName\">Username</div>\r\n            <input\r\n              type=\"text\"\r\n              spellCheck=\"false\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"fieldName\">Email</div>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              spellCheck=\"false\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"fieldName\">Password</div>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              id=\"passwordField\"\r\n              spellCheck=\"false\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <IconButton onClick={() => toggle()}>\r\n              {wantsPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <button className=\"signupButton\" onClick={signUp}>\r\n            Sign Up\r\n          </button>\r\n          <button\r\n            className=\"signupButton googleSignupButton\"\r\n            onClick={signUpgoogle}\r\n          >\r\n            <span>Sign Up with</span>\r\n            <img src={google_logo} alt=\"\" />\r\n          </button>\r\n          <div className=\"loginText\">\r\n            Have an account?&nbsp;<Link to=\"/login\">Login</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js",["146"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js",["147","148","149"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js",["150","151","152","153"],"import React, { useState, forwardRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./Login.css\";\r\nimport google_logo from \"../../images/google_logo.png\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [wantsPassword, setWantsPassword] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(null);\r\n  const [openAlertModal, setOpenAlertModal] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(false);\r\n\r\n  const login = async () => {\r\n    setLoading(true); //this prompts to render the custom Loading component which is a loading circle\r\n    try {\r\n      await firebaseApp.auth().signInWithEmailAndPassword(email, password);\r\n      history.push(\"/daily\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setAlertMessage(error.message);\r\n      setOpenAlertModal(true);\r\n    }\r\n  };\r\n\r\n  const loginGoogle = async () => {\r\n    setLoading(true);\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    await firebaseApp\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setAlertMessage(error.message);\r\n        setOpenAlertModal(true);\r\n      });\r\n    history.push(\"/daily\");\r\n  };\r\n\r\n  const toggle = () => {\r\n    //this toggles the password field from password type(and enable visibilty button) and text type(and disable visibilty button)\r\n    setWantsPassword(!wantsPassword);\r\n    if (wantsPassword) {\r\n      return (document.getElementById(\"passwordField\").type = \"password\");\r\n    } else {\r\n      return (document.getElementById(\"passwordField\").type = \"text\");\r\n    }\r\n  };\r\n\r\n  return !loading ? (\r\n    <div className=\"login\">\r\n      <Dialog\r\n        open={openAlertModal}\r\n        onClose={() => setOpenAlertModal(false)}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{alertMessage}</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenAlertModal(false)} color=\"primary\">\r\n            Fine..\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Navbar />\r\n      <div className=\"loginPage\">\r\n        <div className=\"loginForm\">\r\n          <div className=\"field\">\r\n            <div className=\"fieldName\">Email</div>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              spellCheck=\"false\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <div className=\"fieldName\">Password</div>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              id=\"passwordField\"\r\n              spellCheck=\"false\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <IconButton onClick={() => toggle()}>\r\n              {wantsPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <button className=\"loginButton\" onClick={login}>\r\n            Login\r\n          </button>\r\n          <button\r\n            className=\"loginButton googleLoginButton\"\r\n            onClick={loginGoogle}\r\n          >\r\n            <span>Login with</span>\r\n            <img src={google_logo} alt=\"\" />\r\n          </button>\r\n          <div className=\"signupText\">\r\n            Don't have an account?&nbsp;<Link to=\"/signup\">Signup</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n}\r\n\r\nexport default Login;\r\n",["154","155"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js",["156","157","158"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\App.js",["159","160"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\YearPicker\\YearPicker.js",["161"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\firebase.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Year\\Year.js",["162","163"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Sidebar\\Sidebar.js",["164","165","166","167","168","169","170","171"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Daily\\Daily.js",["172"],"import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./Daily.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport addNotification from \"react-push-notification\";\r\nimport IncompleteTodosSidebar from \"../IncompleteTodosSidebar/IncompleteTodosSidebar\";\r\n\r\nfunction Daily() {\r\n  return (\r\n    <div className=\"daily\">\r\n      {/* this daily class encloses the entire page with navbar at its top */}\r\n      <Navbar />\r\n      <div className=\"dailyPage\">\r\n        {/* this dailyPage class encloses the part of the page below the navbar */}\r\n        <Sidebar />\r\n        <div className=\"dailyPageEmpty\">\r\n          {/* this  dailyPageEmpty class encloses the part of the page below the navbar and to the right of the sidebar */}\r\n          <Calendar />\r\n          <IncompleteTodosSidebar timeType=\"daily\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\loadingContext.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\IncompleteTodosSidebar\\IncompleteTodosSidebar.js",["173","174","175","176","177"],"import React, { useEffect, useState } from \"react\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport \"./IncompleteTodosSidebar.css\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport EachTodo from \"../EachTodo/EachTodo\";\r\nimport NewTodoModal from \"../NewTodoModal/NewTodoModal\";\r\n\r\nfunction IncompleteTodosSidebar(props) {\r\n  const [reqTodos, setReqTodos] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [expandTaskId, setExpandTaskId] = useState(\"\");\r\n  const [expandTaskName, setExpandTaskName] = useState(\"\");\r\n  const [expandTaskDesc, setExpandTaskDesc] = useState(\"\");\r\n  const [expandTaskPri, setExpandTaskPri] = useState(\"0\");\r\n  const [expandTaskTime, setExpandTaskTime] = useState(\"\");\r\n  const [expandTaskTimeType, setExpandTaskTimeType] = useState(\"\");\r\n  //if any specific todo is clicked, all these expandTask details will be passed as a prop to the modal\r\n  const [openTodoModal, setOpenTodoModal] = useState(false);\r\n  //whenever this is true modal with required props is rendered\r\n\r\n  function loadReqTodos() {\r\n    setLoading(true);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .where(\"user\", \"==\", firebaseApp.auth().currentUser.uid)\r\n      .where(\"timeType\", \"==\", props.timeType)\r\n      .orderBy(\"priority\", \"desc\")\r\n      .get()\r\n      .then((snap) => {\r\n        let tparray = [];\r\n        snap.docs.map((each) => {\r\n          let eachdict = {\r\n            id: each.id,\r\n            taskName: each.get(\"taskName\"),\r\n            taskDesc: each.get(\"taskDesc\"),\r\n            priority: each.get(\"priority\"),\r\n            finished: each.get(\"finished\"),\r\n            time: each.get(\"time\"),\r\n          };\r\n          if (!each.get(\"finished\")) {\r\n            tparray.push(eachdict);\r\n          }\r\n        });\r\n        setReqTodos(tparray);\r\n        setLoading(false);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    loadReqTodos();\r\n  }, []);\r\n  // console.log(reqTodos);\r\n\r\n  function expandTodo(id, taskName, taskDesc, taskPri, taskTime, taskTimeType) {\r\n    //this function uses the parameters given by the particular todo triggering this function and sets those parameters equal to the state..then the modal is opened with these states as props\r\n    setExpandTaskName(taskName);\r\n    setExpandTaskDesc(taskDesc);\r\n    setExpandTaskPri(taskPri);\r\n    setExpandTaskId(id);\r\n    setExpandTaskTime(taskTime);\r\n    setExpandTaskTimeType(taskTimeType);\r\n    setOpenTodoModal(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        reqTodos.length == 0\r\n          ? \"incompleteTodosSidebar emptySidebar\"\r\n          : \"incompleteTodosSidebar\"\r\n      }\r\n    >\r\n      {openTodoModal ? (\r\n        <NewTodoModal\r\n          time={expandTaskTime}\r\n          shouldReload={() => loadReqTodos()}\r\n          openTodoModal={(shouldOpen) => setOpenTodoModal(shouldOpen)}\r\n          //this function can change the state which controls opening and closing of modal\r\n          taskId={expandTaskId}\r\n          taskName={expandTaskName}\r\n          taskDesc={expandTaskDesc}\r\n          taskPri={expandTaskPri}\r\n          lastPage={expandTaskTimeType}\r\n        />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : reqTodos.length == 0 ? (\r\n        <div className=\"noTodosMessage\">No incomplete tasks!</div>\r\n      ) : (\r\n        <div className=\"incompleteTodosCont\">\r\n          <div className=\"noIncompleteTodos\">\r\n            {reqTodos.length != 1\r\n              ? `${reqTodos.length} incomplete tasks`\r\n              : `${reqTodos.length} incomplete task`}\r\n          </div>\r\n          <div className=\"inCompleteTodos\">\r\n            {reqTodos.map((each) => (\r\n              <EachTodo\r\n                id={each.id}\r\n                priority={each.priority}\r\n                taskName={each.taskName}\r\n                taskDesc={each.taskDesc}\r\n                finished={each.finished}\r\n                time={each.time}\r\n                timeType={each.timeType}\r\n                startLoading={() => loadReqTodos()}\r\n                // activateLoader={(shouldLoad) => setLoading(shouldLoad)}\r\n                expandTodo={(\r\n                  id,\r\n                  taskName,\r\n                  taskDesc,\r\n                  taskPri,\r\n                  taskTime,\r\n                  taskTimeType\r\n                ) =>\r\n                  expandTodo(\r\n                    id,\r\n                    taskName,\r\n                    taskDesc,\r\n                    taskPri,\r\n                    taskTime,\r\n                    taskTimeType\r\n                  )\r\n                }\r\n                sidebarTodo={true}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IncompleteTodosSidebar;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\MonthCalendar\\MonthCalendar.js",["178","179"],{"ruleId":"180","severity":1,"message":"181","line":1,"column":10,"nodeType":"182","messageId":"183","endLine":1,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":47,"column":30,"nodeType":"186","messageId":"187","endLine":47,"endColumn":32},{"ruleId":"188","severity":1,"message":"189","line":90,"column":6,"nodeType":"190","endLine":90,"endColumn":12,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":114,"column":22,"nodeType":"194","messageId":"195","endLine":114,"endColumn":24},{"ruleId":"192","severity":1,"message":"196","line":121,"column":25,"nodeType":"194","messageId":"195","endLine":121,"endColumn":27},{"ruleId":"192","severity":1,"message":"196","line":121,"column":51,"nodeType":"194","messageId":"195","endLine":121,"endColumn":53},{"ruleId":"192","severity":1,"message":"196","line":131,"column":25,"nodeType":"194","messageId":"195","endLine":131,"endColumn":27},{"ruleId":"192","severity":1,"message":"196","line":145,"column":37,"nodeType":"194","messageId":"195","endLine":145,"endColumn":39},{"ruleId":"192","severity":1,"message":"196","line":145,"column":66,"nodeType":"194","messageId":"195","endLine":145,"endColumn":68},{"ruleId":"192","severity":1,"message":"193","line":201,"column":21,"nodeType":"194","messageId":"195","endLine":201,"endColumn":23},{"ruleId":"180","severity":1,"message":"197","line":8,"column":3,"nodeType":"182","messageId":"183","endLine":8,"endColumn":13},{"ruleId":"180","severity":1,"message":"198","line":10,"column":3,"nodeType":"182","messageId":"183","endLine":10,"endColumn":15},{"ruleId":"180","severity":1,"message":"199","line":20,"column":18,"nodeType":"182","messageId":"183","endLine":20,"endColumn":27},{"ruleId":"192","severity":1,"message":"193","line":90,"column":21,"nodeType":"194","messageId":"195","endLine":90,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":92,"column":28,"nodeType":"194","messageId":"195","endLine":92,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":94,"column":28,"nodeType":"194","messageId":"195","endLine":94,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":72,"column":30,"nodeType":"194","messageId":"195","endLine":72,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":74,"column":30,"nodeType":"194","messageId":"195","endLine":74,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":76,"column":30,"nodeType":"194","messageId":"195","endLine":76,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":88,"column":30,"nodeType":"194","messageId":"195","endLine":88,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":90,"column":30,"nodeType":"194","messageId":"195","endLine":90,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":92,"column":30,"nodeType":"194","messageId":"195","endLine":92,"endColumn":32},{"ruleId":"192","severity":1,"message":"196","line":61,"column":18,"nodeType":"194","messageId":"195","endLine":61,"endColumn":20},{"ruleId":"192","severity":1,"message":"196","line":121,"column":33,"nodeType":"194","messageId":"195","endLine":121,"endColumn":35},{"ruleId":"192","severity":1,"message":"196","line":121,"column":64,"nodeType":"194","messageId":"195","endLine":121,"endColumn":66},{"ruleId":"188","severity":1,"message":"200","line":128,"column":6,"nodeType":"190","endLine":128,"endColumn":31,"suggestions":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"202","replacedBy":"206"},{"ruleId":"204","replacedBy":"207"},{"ruleId":"180","severity":1,"message":"208","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"209","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"210","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":20},{"ruleId":"180","severity":1,"message":"211","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"212","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":14},{"ruleId":"180","severity":1,"message":"213","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":15},{"ruleId":"180","severity":1,"message":"214","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":37},{"ruleId":"180","severity":1,"message":"215","line":11,"column":3,"nodeType":"182","messageId":"183","endLine":11,"endColumn":16},{"ruleId":"180","severity":1,"message":"216","line":12,"column":3,"nodeType":"182","messageId":"183","endLine":12,"endColumn":20},{"ruleId":"180","severity":1,"message":"217","line":15,"column":3,"nodeType":"182","messageId":"183","endLine":15,"endColumn":8},{"ruleId":"202","replacedBy":"218"},{"ruleId":"204","replacedBy":"219"},{"ruleId":"192","severity":1,"message":"196","line":86,"column":18,"nodeType":"194","messageId":"195","endLine":86,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":133,"column":18,"nodeType":"194","messageId":"195","endLine":133,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":166,"column":34,"nodeType":"194","messageId":"195","endLine":166,"endColumn":36},{"ruleId":"180","severity":1,"message":"220","line":2,"column":25,"nodeType":"182","messageId":"183","endLine":2,"endColumn":30},{"ruleId":"192","severity":1,"message":"196","line":31,"column":30,"nodeType":"194","messageId":"195","endLine":31,"endColumn":32},{"ruleId":"180","severity":1,"message":"208","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"212","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":14},{"ruleId":"180","severity":1,"message":"213","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":15},{"ruleId":"180","severity":1,"message":"221","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":28,"column":9,"nodeType":"224","endLine":28,"endColumn":62},{"ruleId":"222","severity":1,"message":"223","line":31,"column":9,"nodeType":"224","endLine":31,"endColumn":62},{"ruleId":"222","severity":1,"message":"223","line":34,"column":9,"nodeType":"224","endLine":34,"endColumn":60},{"ruleId":"222","severity":1,"message":"223","line":37,"column":9,"nodeType":"224","endLine":37,"endColumn":62},{"ruleId":"222","severity":1,"message":"223","line":40,"column":9,"nodeType":"224","endLine":40,"endColumn":60},{"ruleId":"222","severity":1,"message":"223","line":43,"column":9,"nodeType":"224","endLine":43,"endColumn":68},{"ruleId":"222","severity":1,"message":"223","line":46,"column":9,"nodeType":"224","endLine":46,"endColumn":74},{"ruleId":"180","severity":1,"message":"225","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":32,"column":30,"nodeType":"186","messageId":"187","endLine":32,"endColumn":32},{"ruleId":"188","severity":1,"message":"226","line":51,"column":6,"nodeType":"190","endLine":51,"endColumn":8,"suggestions":"227"},{"ruleId":"192","severity":1,"message":"193","line":68,"column":25,"nodeType":"194","messageId":"195","endLine":68,"endColumn":27},{"ruleId":"192","severity":1,"message":"193","line":90,"column":27,"nodeType":"194","messageId":"195","endLine":90,"endColumn":29},{"ruleId":"192","severity":1,"message":"196","line":95,"column":30,"nodeType":"194","messageId":"195","endLine":95,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":24,"column":44,"nodeType":"194","messageId":"195","endLine":24,"endColumn":46},{"ruleId":"192","severity":1,"message":"193","line":25,"column":59,"nodeType":"194","messageId":"195","endLine":25,"endColumn":61},"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["228"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'settaskId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'changeId'. Either include it or remove the dependency array.",["229"],"no-native-reassign",["230"],"no-negated-in-lhs",["231"],["230"],["231"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'AllTodos' is defined but never used.","'Navbar' is defined but never used.","'Sidebar' is defined but never used.","'forwardRef' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'Slide' is defined but never used.",["230"],["231"],"'Route' is defined but never used.","'IconButton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'addNotification' is defined but never used.","React Hook useEffect has a missing dependency: 'loadReqTodos'. Either include it or remove the dependency array.",["232"],{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},"Update the dependencies array to be: [loadData, time]",{"range":"239","text":"240"},"Update the dependencies array to be: [isLoading, currentMonth, changeId]",{"range":"241","text":"242"},"Update the dependencies array to be: [loadReqTodos]",{"range":"243","text":"244"},[3937,3943],"[loadData, time]",[5136,5161],"[isLoading, currentMonth, changeId]",[1905,1907],"[loadReqTodos]"]