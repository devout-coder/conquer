[{"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js":"1","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js":"2","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js":"3","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js":"4","C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js":"5","C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js":"6","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js":"7","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js":"8","C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js":"9","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js":"10","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js":"11","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js":"12","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js":"13","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js":"14","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js":"15","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js":"16","C:\\Users\\Pranil\\pranil\\conquer\\src\\App.js":"17","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\YearPicker\\YearPicker.js":"18","C:\\Users\\Pranil\\pranil\\conquer\\src\\firebase.js":"19","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Year\\Year.js":"20","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Navbar\\Navbar.js":"21","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Sidebar\\Sidebar.js":"22","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Daily\\Daily.js":"23","C:\\Users\\Pranil\\pranil\\conquer\\src\\loadingContext.js":"24","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\IncompleteTodosSidebar\\IncompleteTodosSidebar.js":"25","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\MonthCalendar\\MonthCalendar.js":"26","C:\\Users\\Pranil\\pranil\\conquer\\src\\serviceWorkerRegistration.js":"27","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\VisionBoard\\VisionBoard.js":"28"},{"size":9537,"mtime":1611258458865,"results":"29","hashOfConfig":"30"},{"size":5091,"mtime":1610388187516,"results":"31","hashOfConfig":"30"},{"size":6062,"mtime":1611258996996,"results":"32","hashOfConfig":"30"},{"size":7313,"mtime":1610388187501,"results":"33","hashOfConfig":"30"},{"size":559,"mtime":1610388187527,"results":"34","hashOfConfig":"30"},{"size":766,"mtime":1611243531783,"results":"35","hashOfConfig":"30"},{"size":635,"mtime":1610388187511,"results":"36","hashOfConfig":"30"},{"size":4540,"mtime":1610385987504,"results":"37","hashOfConfig":"30"},{"size":748,"mtime":1611242660213,"results":"38","hashOfConfig":"30"},{"size":735,"mtime":1610388187508,"results":"39","hashOfConfig":"30"},{"size":657,"mtime":1609410557589,"results":"40","hashOfConfig":"30"},{"size":385,"mtime":1611233512865,"results":"41","hashOfConfig":"30"},{"size":478,"mtime":1609410556353,"results":"42","hashOfConfig":"30"},{"size":686,"mtime":1609942698654,"results":"43","hashOfConfig":"30"},{"size":4142,"mtime":1611230048185,"results":"44","hashOfConfig":"30"},{"size":6297,"mtime":1610388187524,"results":"45","hashOfConfig":"30"},{"size":2668,"mtime":1611258409069,"results":"46","hashOfConfig":"30"},{"size":901,"mtime":1610388187525,"results":"47","hashOfConfig":"30"},{"size":536,"mtime":1606213557623,"results":"48","hashOfConfig":"30"},{"size":405,"mtime":1609410557599,"results":"49","hashOfConfig":"30"},{"size":902,"mtime":1611238101095,"results":"50","hashOfConfig":"30"},{"size":1923,"mtime":1610388187520,"results":"51","hashOfConfig":"30"},{"size":948,"mtime":1610388187502,"results":"52","hashOfConfig":"30"},{"size":170,"mtime":1610385987505,"results":"53","hashOfConfig":"30"},{"size":8488,"mtime":1611258279107,"results":"54","hashOfConfig":"30"},{"size":1892,"mtime":1610388187513,"results":"55","hashOfConfig":"30"},{"size":5233,"mtime":1609871327951,"results":"56","hashOfConfig":"30"},{"size":748,"mtime":1609943111638,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cqertl",{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js",["132","133","134","135","136","137","138","139","140","141","142","143","144"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js",["145","146","147","148","149"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js",["150","151","152","153","154","155","156","157","158"],"import {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./EachTodo.css\";\r\n\r\nfunction EachTodo(props) {\r\n  const [checked, setChecked] = useState(props.finished);\r\n  const [modalOpen, setModalOpen] = useState(false); //this state controls the delete modal\r\n  const [mobile, setMobile] = useState(false);\r\n  const checkUncheckfunc = (event) => {\r\n    //this toggles check of todo checkbox and also toggles boolean value of finished property of that particular todo in firestore\r\n    setChecked(event.target.checked);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .doc(props.id)\r\n      .set(\r\n        {\r\n          finished: !checked ? true : false, //this seems contradictory but due to some reason value of checked is false when i check it and true when i uncheck\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        props.startLoading(); //this triggers that loadData func in allTodos which fetches all todos again\r\n      });\r\n  };\r\n  function deleteTodo() {\r\n    //this func deletes that particular todo\r\n    setModalOpen(false);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .doc(props.id)\r\n      .delete()\r\n      .then(() => {\r\n        props.startLoading();\r\n      });\r\n  }\r\n\r\n  var isMobile = {\r\n    //this object contains properties whose values is a func which returns true if the device being used is that property\r\n    Android: function () {\r\n      return navigator.userAgent.match(/Android/i);\r\n    },\r\n    BlackBerry: function () {\r\n      return navigator.userAgent.match(/BlackBerry/i);\r\n    },\r\n    iOS: function () {\r\n      return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n    },\r\n    Opera: function () {\r\n      return navigator.userAgent.match(/Opera Mini/i);\r\n    },\r\n    Windows: function () {\r\n      return (\r\n        navigator.userAgent.match(/IEMobile/i) ||\r\n        navigator.userAgent.match(/WPDesktop/i)\r\n      );\r\n    },\r\n    any: function () {\r\n      return (\r\n        isMobile.Android() ||\r\n        isMobile.BlackBerry() ||\r\n        isMobile.iOS() ||\r\n        isMobile.Opera() ||\r\n        isMobile.Windows()\r\n      );\r\n    },\r\n  };\r\n  function handleTodoClick() {\r\n    if (isMobile.any()) {\r\n      let reqElem = document.getElementById(props.id);\r\n      if (Array.from(reqElem.classList).includes(\"phoneTodo\")) {\r\n        //this conditional checks if the todo has already been clicked and if thats the case then it is expanded\r\n        props.expandTodo(\r\n          //this triggers the func in all todos which renders the todo modal with all these parameters as props\r\n          props.id,\r\n          props.taskName,\r\n          props.taskDesc,\r\n          props.priority,\r\n          props.time,\r\n          props.timeType\r\n        );\r\n      } else {\r\n        //if the todo is not already clicked then phoneTodo is added to its classList which changes the color of the todo and also makes the delete button visible\r\n        reqElem.classList.add(\"phoneTodo\");\r\n      }\r\n    } else {\r\n      props.expandTodo(\r\n        //this triggers the func in all todos which renders the todo modal with all these parameters as props\r\n        props.id,\r\n        props.taskName,\r\n        props.taskDesc,\r\n        props.priority,\r\n        props.time,\r\n        props.timeType\r\n      );\r\n    }\r\n  }\r\n\r\n  document.addEventListener(\"click\", (eve) => {\r\n    let reqElem = document.getElementById(props.id);\r\n    if (reqElem != null) {\r\n      let isClickInside = reqElem.contains(eve.target);\r\n      if (!isClickInside) {\r\n        reqElem.classList.remove(\"phoneTodo\");\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={isMobile.any() ? \"eachTodo\" : \"eachTodo laptopTodo\"}\r\n      id={props.id}\r\n    >\r\n      <Dialog\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure you want to delete this item from your list?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setModalOpen(false)} color=\"secondary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={deleteTodo} color=\"primary\" autoFocus>\r\n            Yeah\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Checkbox\r\n        style={{\r\n          color: props.finished\r\n            ? \"#474747\"\r\n            : props.priority == 3\r\n            ? \"#ff5151\"\r\n            : props.priority == 2\r\n            ? \"#7885fb\"\r\n            : props.priority == 1\r\n            ? \"#20e734\"\r\n            : \"rgba(198, 196, 196, 0.61)\", //different color based on priority\r\n        }}\r\n        checked={checked}\r\n        onChange={checkUncheckfunc}\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n      <div\r\n        className={\r\n          props.finished\r\n            ? \"finishedTodo eachTodoTaskName\"\r\n            : props.priority == 3\r\n            ? \"highPriority eachTodoTaskName\"\r\n            : props.priority == 2\r\n            ? \"mediumPriority eachTodoTaskName\"\r\n            : props.priority == 1\r\n            ? \"lowPriority eachTodoTaskName\"\r\n            : \"noPriority eachTodoTaskName\"\r\n        }\r\n        onClick={() => {\r\n          handleTodoClick();\r\n        }}\r\n      >\r\n        {props.taskName}\r\n      </div>\r\n      {props.sidebarTodo ? (\r\n        <span\r\n          className=\"todoTime\"\r\n          onClick={() => {\r\n            handleTodoClick();\r\n          }}\r\n        >\r\n          {props.time}\r\n        </span>\r\n      ) : (\r\n        <span className=\"noTodoTime\"></span>\r\n      )}\r\n      <IconButton onClick={() => setModalOpen(true)}>\r\n        <DeleteIcon\r\n          style={{\r\n            color: \"#FF3131\",\r\n          }}\r\n        />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EachTodo;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js",["159","160","161","162"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport \"./Calendar.css\";\r\nimport { loadingContext } from \"../../loadingContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const months = {\r\n  0: \"January\",\r\n  1: \"February\",\r\n  2: \"March\",\r\n  3: \"April\",\r\n  4: \"May\",\r\n  5: \"June\",\r\n  6: \"July\",\r\n  7: \"August\",\r\n  8: \"September\",\r\n  9: \"October\",\r\n  10: \"November\",\r\n  11: \"December\",\r\n};\r\n\r\nfunction Calendar() {\r\n  const isLoading = useContext(loadingContext);\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const history = useHistory();\r\n  const getDaysIn = (year, month) => {\r\n    //this function returns the no of days in a particular month\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n  function formattedDate(date) {\r\n    //this function returns any specific date in the format i want which is dd/mm/yyyy\r\n    let day = date.getDate();\r\n    let month = date.getMonth();\r\n    let year = date.getFullYear();\r\n    return `${day}/${month + 1}/${year}`;\r\n  }\r\n  const weekDays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n  const getReqRows = () => {\r\n    //this function returns a giant list which contains several lists with each list representing a week in the month and having all dates in that week\r\n    let noPrevDays = new Date(currentYear, currentMonth, 1).getDay() - 1;\r\n    noPrevDays = noPrevDays === -1 ? 6 : noPrevDays;\r\n    //this var holds the value of no of days in previous month which appear in the first week of this month\r\n\r\n    let noNextDays =\r\n      7 -\r\n      new Date(\r\n        currentYear,\r\n        currentMonth,\r\n        getDaysIn(currentYear, currentMonth)\r\n      ).getDay();\r\n    noNextDays = noNextDays === 7 ? 0 : noNextDays;\r\n    //this var holds the value of no of days in next month which appear in the last week of this month\r\n\r\n    let prevDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth - 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    prevDays =\r\n      noPrevDays != 0 ? prevDays.slice(-noPrevDays, prevDays.length + 1) : [];\r\n    prevDays.forEach((name, index) => {\r\n      if (currentMonth > 0) {\r\n        prevDays[index] = `${prevDays[index]}/${currentMonth}/${currentYear}`;\r\n      } else {\r\n        prevDays[index] = `${prevDays[index]}/12/${currentYear - 1}`;\r\n      }\r\n    });\r\n    //var prevDays contains all dates which are in previous month but are present in the first week of this month\r\n\r\n    let nextDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth + 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    nextDays = nextDays.slice(0, noNextDays);\r\n    nextDays.forEach((name, index) => {\r\n      if (currentMonth + 1 <= 11) {\r\n        nextDays[index] = `${nextDays[index]}/${\r\n          currentMonth + 2\r\n        }/${currentYear}`;\r\n      } else {\r\n        nextDays[index] = `${nextDays[index]}/1/${currentYear + 1}`;\r\n      }\r\n    });\r\n    //var nextDays contains all dates which are in next month but are present in the last week of this month\r\n\r\n    let currentDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth)).keys(),\r\n    ].map((x) => x + 1);\r\n    currentDays.forEach((name, index) => {\r\n      currentDays[index] = `${currentDays[index]}/${\r\n        currentMonth + 1\r\n      }/${currentYear}`;\r\n    });\r\n    //var currentDays holds all the dates which are present in this month\r\n\r\n    let allDays = [...prevDays, ...currentDays, ...nextDays];\r\n    //allDays holds all dates in all weeks of current month\r\n\r\n    let horizontalList = [];\r\n    let i = 0;\r\n    while (i < allDays.length) {\r\n      //every 7 elements in allDays r pushed as a separate list(which represents a week) in horizontalList\r\n      horizontalList.push(allDays.slice(i, i + 7));\r\n      i = i + 7;\r\n    }\r\n    return horizontalList;\r\n  };\r\n\r\n  function changeId() {\r\n    //this function changes the id of td which contains today's date to today and those which contain dates of not this month to notThisMonth...cause i ve defined separate css for these classes\r\n\r\n    let allDates = document.getElementsByTagName(\"td\"); //gets all td elements which hold all dates of all the weeks in the currentMonth\r\n    let todayDate = formattedDate(new Date()); //gets today's date in format of dd/mm/yyyy\r\n    let today = document.getElementById(todayDate); //gets the element in html whose id matches today's date\r\n    if (today != null) {\r\n      today.id = \"today\"; //sets today as id of element with today's date as prev id\r\n    } else {\r\n    }\r\n    for (let each of allDates) {\r\n      //this loop goes through all elements in allDays, splits the id of every element and checks if the month is the current month or not..if its not the current month then the id is changed to notThisMonth\r\n      if (each.id.split(\"/\")[1] != currentMonth + 1 && each.id != \"today\") {\r\n        each.id = \"notThisMonth\";\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    changeId();\r\n  }, [isLoading, currentMonth]);\r\n  const increaseMonth = () => {\r\n    //this function increases the month and changes the month to jan of next year if the existing month is december\r\n    if (currentMonth + 1 <= 11) {\r\n      setCurrentMonth(currentMonth + 1);\r\n    } else {\r\n      setCurrentYear(currentYear + 1);\r\n      setCurrentMonth(0);\r\n    }\r\n  };\r\n\r\n  const decreaseMonth = () => {\r\n    //this function decreases the month and changes the month to december of previous year if the existing month is jan\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(currentMonth - 1);\r\n    } else {\r\n      setCurrentYear(currentYear - 1);\r\n      setCurrentMonth(11);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"topbar\">\r\n        <IconButton color=\"secondary\" onClick={() => decreaseMonth()}>\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <span className=\"topbarMonth\">\r\n          {months[currentMonth]}&nbsp;{currentYear}\r\n        </span>\r\n        <IconButton color=\"secondary\" onClick={() => increaseMonth()}>\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n      <table>\r\n        <tr>\r\n          {weekDays.map((day) => (\r\n            <th className=\"day\">{day}</th>\r\n          ))}\r\n        </tr>\r\n        {getReqRows().map((row) => (\r\n          <tr className=\"row\">\r\n            {/* each list in getReqRows is used as a row here */}\r\n            {row.map((date) => (\r\n              // each date in the list is used as id to td\r\n              <td id={date}>\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    history.push({\r\n                      pathname: \"daily/allTodos\",\r\n                      state: { time: date, lastPage: \"daily\" },\r\n                    })\r\n                  }\r\n                >\r\n                  {\r\n                    //the day part of the date is used here..\r\n                    date.split(\"/\")[0]\r\n                  }\r\n                </IconButton>\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n",["163","164"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js",[],["165","166"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js",["167"],"import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Loading from \"./Components/Loading/Loading\";\r\nimport { loadingContext } from \"./loadingContext\";\r\n\r\nfunction ClosedRoute(props) {\r\n  const user = useContext(loadingContext);\r\n  console.log(user)\r\n  return (\r\n    <Route\r\n      path={props.path}\r\n      render={(data) =>\r\n        user == null ? ( //if the user is logged in he is redirected to daily page...\r\n          <props.component {...data}></props.component>\r\n        ) : user == false ? (\r\n          <Loading />\r\n        ) : (\r\n          //else he remains on that route\r\n          <Redirect to={{ pathname: \"/daily\" }}></Redirect>\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n\r\nexport default ClosedRoute;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js",["168"],"import React, { useState } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport IncompleteTodosSidebar from \"../IncompleteTodosSidebar/IncompleteTodosSidebar\";\r\nimport MonthCalendar from \"../MonthCalendar/MonthCalendar\";\r\nimport \"./Month.css\";\r\n\r\nfunction Month() {\r\n  return (\r\n    <div className=\"month\">\r\n      <Navbar />\r\n      <div className=\"monthPage\">\r\n        <Sidebar />\r\n        <div className=\"monthPageEmpty\">\r\n          <MonthCalendar/>\r\n          <IncompleteTodosSidebar timeType=\"month\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Month;\r\n",["169","170"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js",["171"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js",["172"],"import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Loading from \"./Components/Loading/Loading\";\r\nimport { loadingContext } from \"./loadingContext\";\r\n\r\nfunction PrivateRoute(props) {\r\n  const user = useContext(loadingContext);\r\n  return (\r\n    <Route\r\n      path={props.path}\r\n      render={(data) =>\r\n        user != null ? ( //if the user exists the componetn is rendered...\r\n          <props.component {...data}></props.component>\r\n        ) : user == false ? (\r\n          <Loading />\r\n        ) : (\r\n          //else the user is redirected to login page\r\n          <Redirect to={{ pathname: \"/login\" }}></Redirect>\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js",[],["173","174"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js",["175"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js",["176","177","178"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AllTodos from \"../AllTodos/AllTodos\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport \"./LongTerm.css\";\r\n\r\nfunction LongTerm() {\r\n  let history = useHistory()\r\n  history.push({\r\n    pathname: \"/longTerm/allTodos\",\r\n    state: { time: \"Long Term Goals🎯\", lastPage: \"longTerm\" },\r\n  })\r\n  return(\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default LongTerm;\r\n",["179","180"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js",["181","182","183","184"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js",["185","186","187"],"import { Button, IconButton } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./WeekCalendar.css\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { months } from \"../Calendar/Calendar\";\r\n\r\nfunction WeekCalendar() {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const history = useHistory();\r\n  const weekMonths = {\r\n    0: \"Jan\",\r\n    1: \"Feb\",\r\n    2: \"Mar\",\r\n    3: \"Apr\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"Aug\",\r\n    8: \"Sept\",\r\n    9: \"Oct\",\r\n    10: \"Nov\",\r\n    11: \"Dec\",\r\n  }; //these r the months for the week in mainTodos\r\n\r\n  const getWeekFormattedDate = (date) => {\r\n    //this converts the date to the format dd M yyyy\r\n    return `${date.getDate()} ${\r\n      weekMonths[date.getMonth()]\r\n    } ${date.getFullYear()}`;\r\n  };\r\n\r\n  function replaceDate(date) {\r\n    //this function removes space and year from the date\r\n    return date.replace(/\\s\\d{4}/g, \"\");\r\n  }\r\n\r\n  const getDaysIn = (year, month) => {\r\n    //this function returns the no of days in a particular month\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n\r\n  const increaseMonth = () => {\r\n    //this function increases the month and changes the month to jan of next year if the existing month is december\r\n    if (currentMonth + 1 <= 11) {\r\n      setCurrentMonth(currentMonth + 1);\r\n    } else {\r\n      setCurrentYear(currentYear + 1);\r\n      setCurrentMonth(0);\r\n    }\r\n  };\r\n\r\n  const decreaseMonth = () => {\r\n    //this function decreases the month and changes the month to december of previous year if the existing month is jan\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(currentMonth - 1);\r\n    } else {\r\n      setCurrentYear(currentYear - 1);\r\n      setCurrentMonth(11);\r\n    }\r\n  };\r\n\r\n  const getWeeks = () => {\r\n    //this function returns all the weeks in the current month\r\n\r\n    let noPrevDays = new Date(currentYear, currentMonth, 1).getDay() - 1;\r\n    noPrevDays = noPrevDays === -1 ? 6 : noPrevDays;\r\n    //this var holds the value of no of days in previous month which appear in the first week of this month\r\n\r\n    let noNextDays =\r\n      7 -\r\n      new Date(\r\n        currentYear,\r\n        currentMonth,\r\n        getDaysIn(currentYear, currentMonth)\r\n      ).getDay();\r\n    noNextDays = noNextDays === 7 ? 0 : noNextDays;\r\n    //this var holds the value of no of days in next month which appear in the last week of this month\r\n\r\n    let prevDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth - 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    prevDays =\r\n      noPrevDays != 0 ? prevDays.slice(-noPrevDays, prevDays.length + 1) : [];\r\n    prevDays.forEach((name, index) => {\r\n      if (currentMonth > 0) {\r\n        prevDays[index] = `${prevDays[index]} ${\r\n          weekMonths[currentMonth - 1]\r\n        } ${currentYear}`;\r\n      } else {\r\n        prevDays[index] = `${prevDays[index]} Dec ${currentYear - 1}`;\r\n      }\r\n    });\r\n    //var prevDays contains all dates which are in previous month but are present in the first week of this month\r\n\r\n    let nextDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth + 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    nextDays = nextDays.slice(0, noNextDays);\r\n    nextDays.forEach((name, index) => {\r\n      if (currentMonth + 1 <= 11) {\r\n        nextDays[index] = `${nextDays[index]} ${\r\n          weekMonths[currentMonth + 1]\r\n        } ${currentYear}`;\r\n      } else {\r\n        nextDays[index] = `${nextDays[index]} Jan ${currentYear + 1}`;\r\n      }\r\n    });\r\n    //var nextDays contains all dates which are in next month but are present in the last week of this month\r\n\r\n    let currentDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth)).keys(),\r\n    ].map((x) => x + 1);\r\n    currentDays.forEach((name, index) => {\r\n      currentDays[\r\n        index\r\n      ] = `${currentDays[index]} ${weekMonths[currentMonth]} ${currentYear}`;\r\n    });\r\n    //var currentDays holds all the dates which are present in this month\r\n\r\n    let allDays = [...prevDays, ...currentDays, ...nextDays];\r\n    //allDays holds all dates in all weeks of current month\r\n\r\n    let weeksList = [];\r\n    let today = getWeekFormattedDate(new Date());\r\n    for (let i=0; i < allDays.length; i = i + 7) {\r\n      //loops through a week\r\n      let foundToday = false;\r\n      for (let each of allDays.slice(i, i + 7)) {\r\n        //this loops through all days in this particular week\r\n        if (each == today) {\r\n          //when any day matches with today's date then the foundToday switch is turned true for this week\r\n          foundToday = true;\r\n        }\r\n      }\r\n      weeksList.push(\r\n        foundToday\r\n          ? `${allDays[i]}-${allDays[i + 6]}#currentWeek`\r\n          : `${allDays[i]}-${allDays[i + 6]}`\r\n        //if today's date lies in this week then foundToday ll be true and then the week ll be labelled as #currentWeek\r\n      );\r\n      foundToday = false; //foundToday is turned false before running the while loop for next week\r\n    }\r\n    return weeksList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"weekCalendar\">\r\n      <div className=\"topbar\">\r\n        <IconButton color=\"secondary\" onClick={() => decreaseMonth()}>\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <span className=\"topbarMonth\">\r\n          {months[currentMonth]}&nbsp;{currentYear}\r\n        </span>\r\n        <IconButton color=\"secondary\" onClick={() => increaseMonth()}>\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"allWeeks\">\r\n        {getWeeks().map((week) => (\r\n          <Button\r\n            className={\r\n              week.split(\"#\")[1] == \"currentWeek\"\r\n                ? \"eachWeek currentWeek\"\r\n                : \"eachWeek\"\r\n            }\r\n            onClick={() =>\r\n              history.push({\r\n                pathname: \"week/allTodos\",\r\n                state: { time: week.split(\"#\")[0], lastPage: \"week\" },\r\n              })\r\n            }\r\n          >\r\n            {replaceDate(week.split(\"#\")[0])}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeekCalendar;\r\n",["188","189"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\App.js",["190","191"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\YearPicker\\YearPicker.js",["192"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\firebase.js",[],["193","194"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Year\\Year.js",["195","196"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Navbar\\Navbar.js",["197"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Sidebar\\Sidebar.js",["198","199","200","201","202","203","204","205"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Daily\\Daily.js",["206"],"import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./Daily.css\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport addNotification from \"react-push-notification\";\r\nimport IncompleteTodosSidebar from \"../IncompleteTodosSidebar/IncompleteTodosSidebar\";\r\n\r\nfunction Daily() {\r\n  return (\r\n    <div className=\"daily\">\r\n      {/* this daily class encloses the entire page with navbar at its top */}\r\n      <Navbar />\r\n      <div className=\"dailyPage\">\r\n        {/* this dailyPage class encloses the part of the page below the navbar */}\r\n        <Sidebar />\r\n        <div className=\"dailyPageEmpty\">\r\n          {/* this  dailyPageEmpty class encloses the part of the page below the navbar and to the right of the sidebar */}\r\n          <Calendar />\r\n          <IncompleteTodosSidebar timeType=\"daily\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n",["207","208"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\loadingContext.js",[],["209","210"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\IncompleteTodosSidebar\\IncompleteTodosSidebar.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport \"./IncompleteTodosSidebar.css\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport EachTodo from \"../EachTodo/EachTodo\";\r\nimport NewTodoModal from \"../NewTodoModal/NewTodoModal\";\r\nimport { months } from \"../Calendar/Calendar\";\r\nimport { loadingContext } from \"../../loadingContext\";\r\n\r\nfunction IncompleteTodosSidebar(props) {\r\n  const fullMonths = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const weekMonths = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const [reqTodos, setReqTodos] = useState([]);\r\n  const user = useContext(loadingContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [expandTaskId, setExpandTaskId] = useState(\"\");\r\n  const [expandTaskName, setExpandTaskName] = useState(\"\");\r\n  const [expandTaskDesc, setExpandTaskDesc] = useState(\"\");\r\n  const [expandTaskPri, setExpandTaskPri] = useState(\"0\");\r\n  const [expandTaskTime, setExpandTaskTime] = useState(\"\");\r\n  const [expandTaskTimeType, setExpandTaskTimeType] = useState(\"\");\r\n  //if any specific todo is clicked, all these expandTask details will be passed as a prop to the modal\r\n  const [openTodoModal, setOpenTodoModal] = useState(false);\r\n  //whenever this is true modal with required props is rendered\r\n\r\n  function sortTodos(arr) {\r\n    //later in func loadReqTodos i ve taken reqTodos as a parameter and sorts it by the time and in accordance of timeType(month, daily, week, year)\r\n    let sortedTodos = arr;\r\n    sortedTodos = arr.sort((a, b) => {\r\n      let temparr = [a.time, b.time];\r\n      if (props.timeType == \"year\") {\r\n        return temparr[1] - temparr[0];\r\n      } else if (props.timeType == \"month\") {\r\n        let newTemp = Array.from(\r\n          temparr.map((each) => {\r\n            return [fullMonths.indexOf(each.split(\" \")[0]), each.split(\" \")[1]];\r\n          })\r\n        ); //this is something like this [[0, 2021],[8, 2022]]\r\n        let compareYear = newTemp[1][1] - newTemp[0][1]; //this contains the difference of years\r\n        let compareMonth = newTemp[1][0] - newTemp[0][0]; //this contains the difference of months\r\n        if (compareYear != 0) {\r\n          //evaluates true if its not the same year\r\n          return compareYear;\r\n        } else {\r\n          return compareMonth;\r\n        }\r\n      } else if (props.timeType == \"week\") {\r\n        let newTemp = Array.from(\r\n          temparr.map((each) => {\r\n            let reqWeek = each.split(\"-\")[0].split(\" \"); //this stores the first part of the week like [\"4\", \"Jan\", \"2021\"]\r\n            reqWeek[1] = weekMonths.indexOf(reqWeek[1]); //replaces the name of the month to a no\r\n            return reqWeek;\r\n          })\r\n        );\r\n        let compareYear = newTemp[1][2] - newTemp[0][2]; //this contains the difference of years\r\n        let compareMonth = newTemp[1][1] - newTemp[0][1]; //this contains the difference of months\r\n        let compareDay = newTemp[1][0] - newTemp[0][0];\r\n        if (compareYear != 0) {\r\n          //evaluates true if its not the same year\r\n          return compareYear;\r\n        } else if (compareMonth != 0) {\r\n          //evaluates true if its not the same month\r\n          return compareMonth;\r\n        } else {\r\n          //evaluates true if its not the same day\r\n          return compareDay;\r\n        }\r\n      } else if (props.timeType == \"daily\") {\r\n        let newTemp = Array.from(\r\n          temparr.map((each) => {\r\n            let reqDay = each.split(\"/\"); //this stores the first part of the week like [\"4\", \"1\", \"2021\"]\r\n            return reqDay;\r\n          })\r\n        );\r\n        let compareYear = newTemp[1][2] - newTemp[0][2]; //this contains the difference of years\r\n        let compareMonth = newTemp[1][1] - newTemp[0][1]; //this contains the difference of months\r\n        let compareDay = newTemp[1][0] - newTemp[0][0];\r\n        if (compareYear != 0) {\r\n          //evaluates true if its not the same year\r\n          return compareYear;\r\n        } else if (compareMonth != 0) {\r\n          //evaluates true if its not the same month\r\n          return compareMonth;\r\n        } else {\r\n          //evaluates true if its not the same day\r\n          return compareDay;\r\n        }\r\n      }\r\n    });\r\n    return sortedTodos;\r\n  }\r\n  function loadReqTodos() {\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .where(\"user\", \"==\", firebaseApp.auth().currentUser.uid)\r\n      .where(\"timeType\", \"==\", props.timeType)\r\n      .orderBy(\"priority\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        setLoading(true);\r\n        let tparray = [];\r\n        snap.docs.map((each) => {\r\n          let eachdict = {\r\n            id: each.id,\r\n            taskName: each.get(\"taskName\"),\r\n            taskDesc: each.get(\"taskDesc\"),\r\n            priority: each.get(\"priority\"),\r\n            finished: each.get(\"finished\"),\r\n            time: each.get(\"time\"),\r\n          };\r\n          if (!each.get(\"finished\")) {\r\n            tparray.push(eachdict);\r\n          }\r\n        });\r\n        sortTodos(tparray);\r\n        setReqTodos(tparray);\r\n        setLoading(false);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadReqTodos();\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [user]);\r\n  // console.log(reqTodos);\r\n\r\n  function expandTodo(id, taskName, taskDesc, taskPri, taskTime, taskTimeType) {\r\n    //this function uses the parameters given by the particular todo triggering this function and sets those parameters equal to the state..then the modal is opened with these states as props\r\n    setExpandTaskName(taskName);\r\n    setExpandTaskDesc(taskDesc);\r\n    setExpandTaskPri(taskPri);\r\n    setExpandTaskId(id);\r\n    setExpandTaskTime(taskTime);\r\n    setExpandTaskTimeType(taskTimeType);\r\n    setOpenTodoModal(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        reqTodos.length == 0\r\n          ? \"incompleteTodosSidebar emptySidebar\"\r\n          : \"incompleteTodosSidebar\"\r\n      }\r\n    >\r\n      {openTodoModal ? (\r\n        <NewTodoModal\r\n          time={expandTaskTime}\r\n          shouldReload={() => loadReqTodos()}\r\n          openTodoModal={(shouldOpen) => setOpenTodoModal(shouldOpen)}\r\n          //this function can change the state which controls opening and closing of modal\r\n          taskId={expandTaskId}\r\n          taskName={expandTaskName}\r\n          taskDesc={expandTaskDesc}\r\n          taskPri={expandTaskPri}\r\n          lastPage={expandTaskTimeType}\r\n        />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : reqTodos.length == 0 ? (\r\n        <div className=\"noTodosMessage\">No incomplete tasks!</div>\r\n      ) : (\r\n        <div\r\n          className={\r\n            props.timeType == \"year\"\r\n              ? \"thisIsYear incompleteTodosCont\"\r\n              : \"incompleteTodosCont\"\r\n          }\r\n        >\r\n          <div className=\"noIncompleteTodos\">\r\n            {reqTodos.length != 1\r\n              ? `${reqTodos.length} incomplete tasks`\r\n              : `${reqTodos.length} incomplete task`}\r\n          </div>\r\n          <div className=\"inCompleteTodos\">\r\n            {reqTodos.map((each) => (\r\n              <EachTodo\r\n                id={each.id}\r\n                priority={each.priority}\r\n                taskName={each.taskName}\r\n                taskDesc={each.taskDesc}\r\n                finished={each.finished}\r\n                time={each.time}\r\n                timeType={each.timeType}\r\n                startLoading={() => loadReqTodos()}\r\n                // activateLoader={(shouldLoad) => setLoading(shouldLoad)}\r\n                expandTodo={(\r\n                  id,\r\n                  taskName,\r\n                  taskDesc,\r\n                  taskPri,\r\n                  taskTime,\r\n                  taskTimeType\r\n                ) =>\r\n                  expandTodo(\r\n                    id,\r\n                    taskName,\r\n                    taskDesc,\r\n                    taskPri,\r\n                    taskTime,\r\n                    taskTimeType\r\n                  )\r\n                }\r\n                sidebarTodo={true}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IncompleteTodosSidebar;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\MonthCalendar\\MonthCalendar.js",["228","229"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\VisionBoard\\VisionBoard.js",[],{"ruleId":"230","severity":1,"message":"231","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":48,"column":30,"nodeType":"236","messageId":"237","endLine":48,"endColumn":32},{"ruleId":"238","severity":1,"message":"239","line":96,"column":6,"nodeType":"240","endLine":96,"endColumn":18,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":120,"column":22,"nodeType":"244","messageId":"245","endLine":120,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":122,"column":26,"nodeType":"244","messageId":"245","endLine":122,"endColumn":28},{"ruleId":"242","severity":1,"message":"246","line":129,"column":25,"nodeType":"244","messageId":"245","endLine":129,"endColumn":27},{"ruleId":"242","severity":1,"message":"246","line":129,"column":51,"nodeType":"244","messageId":"245","endLine":129,"endColumn":53},{"ruleId":"242","severity":1,"message":"246","line":139,"column":25,"nodeType":"244","messageId":"245","endLine":139,"endColumn":27},{"ruleId":"242","severity":1,"message":"246","line":155,"column":40,"nodeType":"244","messageId":"245","endLine":155,"endColumn":42},{"ruleId":"242","severity":1,"message":"246","line":155,"column":69,"nodeType":"244","messageId":"245","endLine":155,"endColumn":71},{"ruleId":"242","severity":1,"message":"246","line":157,"column":41,"nodeType":"244","messageId":"245","endLine":157,"endColumn":43},{"ruleId":"242","severity":1,"message":"246","line":187,"column":39,"nodeType":"244","messageId":"245","endLine":187,"endColumn":41},{"ruleId":"242","severity":1,"message":"243","line":223,"column":21,"nodeType":"244","messageId":"245","endLine":223,"endColumn":23},{"ruleId":"230","severity":1,"message":"247","line":18,"column":18,"nodeType":"232","messageId":"233","endLine":18,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":60,"column":21,"nodeType":"244","messageId":"245","endLine":60,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":62,"column":28,"nodeType":"244","messageId":"245","endLine":62,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":64,"column":28,"nodeType":"244","messageId":"245","endLine":64,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":71,"column":21,"nodeType":"244","messageId":"245","endLine":71,"endColumn":23},{"ruleId":"230","severity":1,"message":"248","line":9,"column":17,"nodeType":"232","messageId":"233","endLine":9,"endColumn":26},{"ruleId":"230","severity":1,"message":"249","line":17,"column":10,"nodeType":"232","messageId":"233","endLine":17,"endColumn":16},{"ruleId":"230","severity":1,"message":"250","line":17,"column":18,"nodeType":"232","messageId":"233","endLine":17,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":146,"column":30,"nodeType":"244","messageId":"245","endLine":146,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":148,"column":30,"nodeType":"244","messageId":"245","endLine":148,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":150,"column":30,"nodeType":"244","messageId":"245","endLine":150,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":162,"column":30,"nodeType":"244","messageId":"245","endLine":162,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":164,"column":30,"nodeType":"244","messageId":"245","endLine":164,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":166,"column":30,"nodeType":"244","messageId":"245","endLine":166,"endColumn":32},{"ruleId":"242","severity":1,"message":"246","line":61,"column":18,"nodeType":"244","messageId":"245","endLine":61,"endColumn":20},{"ruleId":"242","severity":1,"message":"246","line":121,"column":33,"nodeType":"244","messageId":"245","endLine":121,"endColumn":35},{"ruleId":"242","severity":1,"message":"246","line":121,"column":64,"nodeType":"244","messageId":"245","endLine":121,"endColumn":66},{"ruleId":"238","severity":1,"message":"251","line":128,"column":6,"nodeType":"240","endLine":128,"endColumn":31,"suggestions":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"253","replacedBy":"257"},{"ruleId":"255","replacedBy":"258"},{"ruleId":"242","severity":1,"message":"243","line":15,"column":18,"nodeType":"244","messageId":"245","endLine":15,"endColumn":20},{"ruleId":"230","severity":1,"message":"259","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"253","replacedBy":"260"},{"ruleId":"255","replacedBy":"261"},{"ruleId":"230","severity":1,"message":"248","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"243","line":14,"column":18,"nodeType":"244","messageId":"245","endLine":14,"endColumn":20},{"ruleId":"253","replacedBy":"262"},{"ruleId":"255","replacedBy":"263"},{"ruleId":"230","severity":1,"message":"264","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":20},{"ruleId":"230","severity":1,"message":"265","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":16},{"ruleId":"230","severity":1,"message":"266","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":14},{"ruleId":"230","severity":1,"message":"267","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":15},{"ruleId":"253","replacedBy":"268"},{"ruleId":"255","replacedBy":"269"},{"ruleId":"230","severity":1,"message":"270","line":1,"column":27,"nodeType":"232","messageId":"233","endLine":1,"endColumn":37},{"ruleId":"230","severity":1,"message":"271","line":11,"column":3,"nodeType":"232","messageId":"233","endLine":11,"endColumn":16},{"ruleId":"230","severity":1,"message":"272","line":12,"column":3,"nodeType":"232","messageId":"233","endLine":12,"endColumn":20},{"ruleId":"230","severity":1,"message":"273","line":15,"column":3,"nodeType":"232","messageId":"233","endLine":15,"endColumn":8},{"ruleId":"242","severity":1,"message":"246","line":86,"column":18,"nodeType":"244","messageId":"245","endLine":86,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":133,"column":18,"nodeType":"244","messageId":"245","endLine":133,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":166,"column":34,"nodeType":"244","messageId":"245","endLine":166,"endColumn":36},{"ruleId":"253","replacedBy":"274"},{"ruleId":"255","replacedBy":"275"},{"ruleId":"230","severity":1,"message":"276","line":2,"column":25,"nodeType":"232","messageId":"233","endLine":2,"endColumn":30},{"ruleId":"230","severity":1,"message":"277","line":9,"column":8,"nodeType":"232","messageId":"233","endLine":9,"endColumn":15},{"ruleId":"230","severity":1,"message":"259","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"253","replacedBy":"278"},{"ruleId":"255","replacedBy":"279"},{"ruleId":"230","severity":1,"message":"266","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":14},{"ruleId":"230","severity":1,"message":"267","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":15},{"ruleId":"242","severity":1,"message":"243","line":18,"column":29,"nodeType":"244","messageId":"245","endLine":18,"endColumn":31},{"ruleId":"230","severity":1,"message":"280","line":10,"column":10,"nodeType":"232","messageId":"233","endLine":10,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":28,"column":9,"nodeType":"283","endLine":28,"endColumn":62},{"ruleId":"281","severity":1,"message":"282","line":31,"column":9,"nodeType":"283","endLine":31,"endColumn":62},{"ruleId":"281","severity":1,"message":"282","line":34,"column":9,"nodeType":"283","endLine":34,"endColumn":60},{"ruleId":"281","severity":1,"message":"282","line":37,"column":9,"nodeType":"283","endLine":37,"endColumn":62},{"ruleId":"281","severity":1,"message":"282","line":40,"column":9,"nodeType":"283","endLine":40,"endColumn":60},{"ruleId":"281","severity":1,"message":"282","line":43,"column":9,"nodeType":"283","endLine":43,"endColumn":68},{"ruleId":"281","severity":1,"message":"282","line":46,"column":9,"nodeType":"283","endLine":46,"endColumn":74},{"ruleId":"230","severity":1,"message":"284","line":6,"column":8,"nodeType":"232","messageId":"233","endLine":6,"endColumn":23},{"ruleId":"253","replacedBy":"285"},{"ruleId":"255","replacedBy":"286"},{"ruleId":"253","replacedBy":"287"},{"ruleId":"255","replacedBy":"288"},{"ruleId":"230","severity":1,"message":"289","line":7,"column":10,"nodeType":"232","messageId":"233","endLine":7,"endColumn":16},{"ruleId":"234","severity":1,"message":"290","line":55,"column":35,"nodeType":"236","messageId":"291","endLine":55,"endColumn":37},{"ruleId":"242","severity":1,"message":"243","line":57,"column":26,"nodeType":"244","messageId":"245","endLine":57,"endColumn":28},{"ruleId":"242","severity":1,"message":"243","line":59,"column":33,"nodeType":"244","messageId":"245","endLine":59,"endColumn":35},{"ruleId":"242","severity":1,"message":"246","line":67,"column":25,"nodeType":"244","messageId":"245","endLine":67,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":73,"column":33,"nodeType":"244","messageId":"245","endLine":73,"endColumn":35},{"ruleId":"242","severity":1,"message":"246","line":84,"column":25,"nodeType":"244","messageId":"245","endLine":84,"endColumn":27},{"ruleId":"242","severity":1,"message":"246","line":87,"column":33,"nodeType":"244","messageId":"245","endLine":87,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":94,"column":33,"nodeType":"244","messageId":"245","endLine":94,"endColumn":35},{"ruleId":"242","severity":1,"message":"246","line":104,"column":25,"nodeType":"244","messageId":"245","endLine":104,"endColumn":27},{"ruleId":"242","severity":1,"message":"246","line":107,"column":33,"nodeType":"244","messageId":"245","endLine":107,"endColumn":35},{"ruleId":"234","severity":1,"message":"235","line":128,"column":30,"nodeType":"236","messageId":"237","endLine":128,"endColumn":32},{"ruleId":"238","severity":1,"message":"292","line":152,"column":6,"nodeType":"240","endLine":152,"endColumn":12,"suggestions":"293"},{"ruleId":"242","severity":1,"message":"243","line":169,"column":25,"nodeType":"244","messageId":"245","endLine":169,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":191,"column":27,"nodeType":"244","messageId":"245","endLine":191,"endColumn":29},{"ruleId":"242","severity":1,"message":"243","line":196,"column":28,"nodeType":"244","messageId":"245","endLine":196,"endColumn":30},{"ruleId":"242","severity":1,"message":"246","line":202,"column":30,"nodeType":"244","messageId":"245","endLine":202,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":24,"column":44,"nodeType":"244","messageId":"245","endLine":24,"endColumn":46},{"ruleId":"242","severity":1,"message":"243","line":25,"column":59,"nodeType":"244","messageId":"245","endLine":25,"endColumn":61},"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["294"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'settaskId' is assigned a value but never used.","'useEffect' is defined but never used.","'mobile' is assigned a value but never used.","'setMobile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'changeId'. Either include it or remove the dependency array.",["295"],"no-native-reassign",["296"],"no-negated-in-lhs",["297"],["296"],["297"],"'useState' is defined but never used.",["296"],["297"],["296"],["297"],"'useHistory' is defined but never used.","'AllTodos' is defined but never used.","'Navbar' is defined but never used.","'Sidebar' is defined but never used.",["296"],["297"],"'forwardRef' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'Slide' is defined but never used.",["296"],["297"],"'Route' is defined but never used.","'Loading' is defined but never used.",["296"],["297"],"'IconButton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'addNotification' is defined but never used.",["296"],["297"],["296"],["297"],"'months' is defined but never used.","Array.prototype.sort() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'loadReqTodos'. Either include it or remove the dependency array.",["298"],{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},"Update the dependencies array to be: [loadData, time, user]",{"range":"305","text":"306"},"Update the dependencies array to be: [isLoading, currentMonth, changeId]",{"range":"307","text":"308"},"Update the dependencies array to be: [loadReqTodos, user]",{"range":"309","text":"310"},[4251,4263],"[loadData, time, user]",[5136,5161],"[isLoading, currentMonth, changeId]",[5504,5510],"[loadReqTodos, user]"]