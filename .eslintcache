[{"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js":"1","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js":"2","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js":"3","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js":"4","C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js":"5","C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js":"6","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js":"7","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js":"8","C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js":"9","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js":"10","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js":"11","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js":"12","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js":"13","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js":"14","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js":"15","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js":"16","C:\\Users\\Pranil\\pranil\\conquer\\src\\App.js":"17","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\YearPicker\\YearPicker.js":"18","C:\\Users\\Pranil\\pranil\\conquer\\src\\firebase.js":"19","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Year\\Year.js":"20","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Navbar\\Navbar.js":"21"},{"size":8093,"mtime":1608743377102,"results":"22","hashOfConfig":"23"},{"size":5759,"mtime":1608667838940,"results":"24","hashOfConfig":"23"},{"size":3551,"mtime":1608400052073,"results":"25","hashOfConfig":"23"},{"size":7314,"mtime":1608720105829,"results":"26","hashOfConfig":"23"},{"size":432,"mtime":1606211631092,"results":"27","hashOfConfig":"23"},{"size":583,"mtime":1608394353873,"results":"28","hashOfConfig":"23"},{"size":1867,"mtime":1608667382610,"results":"29","hashOfConfig":"23"},{"size":4540,"mtime":1608462561564,"results":"30","hashOfConfig":"23"},{"size":481,"mtime":1606562839345,"results":"31","hashOfConfig":"32"},{"size":726,"mtime":1607261509856,"results":"33","hashOfConfig":"32"},{"size":506,"mtime":1608649141385,"results":"34","hashOfConfig":"23"},{"size":361,"mtime":1606506978725,"results":"35","hashOfConfig":"23"},{"size":478,"mtime":1608737927651,"results":"36","hashOfConfig":"23"},{"size":280,"mtime":1606645855964,"results":"37","hashOfConfig":"23"},{"size":4142,"mtime":1608462280896,"results":"38","hashOfConfig":"23"},{"size":6332,"mtime":1608665042638,"results":"39","hashOfConfig":"23"},{"size":2641,"mtime":1608618174355,"results":"40","hashOfConfig":"23"},{"size":843,"mtime":1608657004102,"results":"41","hashOfConfig":"23"},{"size":536,"mtime":1606213557623,"results":"42","hashOfConfig":"23"},{"size":416,"mtime":1608734436022,"results":"43","hashOfConfig":"23"},{"size":972,"mtime":1608736077450,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"cqertl",{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w9fij",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\AllTodos\\AllTodos.js",["95","96","97","98","99","100","101","102"],"import { Checkbox, IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport QueueIcon from \"@material-ui/icons/Queue\";\r\nimport NewTodoModal from \"../NewTodoModal/NewTodoModal\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport \"./AllTodos.css\";\r\nimport EachTodo from \"../EachTodo/EachTodo\";\r\nimport YearPicker from \"../YearPicker/YearPicker\";\r\n\r\nfunction AllTodos(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const location = useLocation(); //holds props\r\n  const [time, setTime] = useState(location.state.time); //this holds the date/month/week/year of which the user wants all todos\r\n  const lastPage = location.state.lastPage; //this holds daily/weekly/monthly/yearly basically the type of time wanted\r\n  const [finishedTodos, setFinishedTodos] = useState([]);\r\n  const [unfinishedTodos, setUnfinishedTodos] = useState([]);\r\n  const [expandTaskId, setExpandTaskId] = useState(\"\");\r\n  const [expandTaskName, setExpandTaskName] = useState(\"\");\r\n  const [expandTaskDesc, setExpandTaskDesc] = useState(\"\");\r\n  const [expandTaskPri, setExpandTaskPri] = useState(\"0\");\r\n  //if any specific todo is clicked, all these expandTask details will be passed as a prop to the modal\r\n  const [openTodoModal, setOpenTodoModal] = useState(false);\r\n  //whenever this is true modal with required props is rendered\r\n  function loadData() {\r\n    //this function fetches todos from firebase of the specific time, distinguishes them as finished and unfinished and stores them in state variables\r\n\r\n    // setLoading(true); //this activates the Loading component with that damn loader\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .where(\"user\", \"==\", firebaseApp.auth().currentUser.uid)\r\n      .where(\"time\", \"==\", time)\r\n      .orderBy(\"priority\", \"desc\")\r\n      .get()\r\n      .then((snap) => {\r\n        let finished = [];\r\n        let unfinished = [];\r\n        snap.docs.map((each) => {\r\n          let eachdict = {\r\n            id: each.id,\r\n            taskName: each.get(\"taskName\"),\r\n            taskDesc: each.get(\"taskDesc\"),\r\n            priority: each.get(\"priority\"),\r\n            finished: each.get(\"finished\"),\r\n            time: each.get(\"time\"),\r\n          };\r\n          if (each.get(\"finished\")) {\r\n            //each doc in todos collection of firebase is added to either finished or unfinished list based on its finished status\r\n            finished.push(eachdict);\r\n          } else {\r\n            unfinished.push(eachdict);\r\n          }\r\n        });\r\n        setFinishedTodos(finished);\r\n        setUnfinishedTodos(unfinished);\r\n      });\r\n    // setLoading(false); //when all the data is fetched and finished and unfinished todos are set the Loading component is stopped from rendering\r\n  }\r\n  function replaceDate(date) {\r\n    return date.replace(/\\s\\d{4}/g, \"\");\r\n  }\r\n  function expandTodo(id, taskName, taskDesc, taskPri) {\r\n    //this function uses the parameters given by the particular todo triggering this function and sets those parameters equal to the state..then the modal is opened with these states as props\r\n    setExpandTaskName(taskName);\r\n    setExpandTaskDesc(taskDesc);\r\n    setExpandTaskPri(taskPri);\r\n    setExpandTaskId(id);\r\n    setOpenTodoModal(true);\r\n  }\r\n  function expandBlankTodo() {\r\n    //this opens a blank todo with no props regarding details of any todo\r\n    setExpandTaskName(\"\");\r\n    setExpandTaskDesc(\"\");\r\n    setExpandTaskPri(\"0\");\r\n    setExpandTaskId(\"\");\r\n    setOpenTodoModal(true);\r\n  }\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n  return !loading ? (\r\n    <div className=\"allTodos\">\r\n      {openTodoModal ? (\r\n        <NewTodoModal\r\n          time={time}\r\n          shouldReload={() => loadData()} //when this function is triggered data is fetched and saved in finished and unfinished todos state\r\n          openTodoModal={(shouldOpen) => setOpenTodoModal(shouldOpen)}\r\n          //this function can change the state which controls opening and closing of modal\r\n          activateLoader={(shouldLoad) => setLoading(shouldLoad)} //this func triggers rendering of Loading component...\r\n          taskId={expandTaskId}\r\n          taskName={expandTaskName}\r\n          taskDesc={expandTaskDesc}\r\n          taskPri={expandTaskPri}\r\n        />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <Navbar />\r\n      <div className=\"allTodosPage\">\r\n        <Sidebar />\r\n        <div className=\"allTodosPageEmpty\">\r\n          <div className=\"topbar\">\r\n            {lastPage != \"longTerm\" && lastPage != \"year\" ? (\r\n              <IconButton\r\n                title=\"Back\"\r\n                onClick={() => history.push(`/${lastPage}`)}\r\n              >\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            {lastPage != \"year\" ? (\r\n              <span className=\"time\">{replaceDate(time)}</span>\r\n            ) : (\r\n              <div className=\"modifiedYearPicker\">\r\n                <YearPicker year={time} changeYear={(year) => setTime(year)} />\r\n              </div>\r\n            )}\r\n            <IconButton onClick={() => expandBlankTodo()} title=\"New Todo\">\r\n              <QueueIcon />\r\n            </IconButton>\r\n            {/* {lastPage == \"year\" ? (\r\n              <div className=\"modifiedYearPicker\">\r\n                <YearPicker year={time} changeYear={(year) => setTime(year)} />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )} */}\r\n          </div>\r\n          {unfinishedTodos.length != 0 || finishedTodos.length != 0 ? (\r\n            <div className=\"mainTodos\">\r\n              <div className=\"unfinishedTodos\">\r\n                <div className=\"noUnfinished noTodos\">\r\n                  {unfinishedTodos.length} unfinished\r\n                </div>\r\n                <div className=\"unfinishedTodosList\">\r\n                  {unfinishedTodos.map((each) => (\r\n                    <EachTodo\r\n                      id={each.id}\r\n                      priority={each.priority}\r\n                      taskName={each.taskName}\r\n                      taskDesc={each.taskDesc}\r\n                      finished={each.finished}\r\n                      startLoading={() => loadData()}\r\n                      activateLoader={(shouldLoad) => setLoading(shouldLoad)}\r\n                      expandTodo={(id, taskName, taskDesc, taskPri) =>\r\n                        expandTodo(id, taskName, taskDesc, taskPri)\r\n                      }\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"finishedTodos\">\r\n                <div className=\"noFinished noTodos\">\r\n                  {finishedTodos.length} finished\r\n                </div>\r\n                <div className=\"finishedTodosList\">\r\n                  {finishedTodos.map((each) => (\r\n                    <EachTodo\r\n                      id={each.id}\r\n                      priority={each.priority}\r\n                      taskName={each.taskName}\r\n                      taskDesc={each.taskDesc}\r\n                      finished={each.finished}\r\n                      startLoading={() => loadData()}\r\n                      activateLoader={(shouldLoad) => setLoading(shouldLoad)}\r\n                      expandTodo={(id, taskName, taskDesc, taskPri) =>\r\n                        expandTodo(id, taskName, taskDesc, taskPri)\r\n                      }\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            //this is rendered if the length of both finished and unfinished todos is 0\r\n            <div className=\"noTodosMessage\">No tasks added yet!</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n}\r\n\r\nexport default AllTodos;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\NewTodoModal\\NewTodoModal.js",["103","104","105","106","107","108","109","110"],"import React, { useEffect, useState } from \"react\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport { ArrowBack, Save } from \"@material-ui/icons\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  NativeSelect,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport \"./NewTodoModal.css\";\r\nimport firebaseApp from \"../../firebase\";\r\n\r\nfunction NewTodoModal(props) {\r\n  const [taskPri, setTaskPri] = useState(props.taskPri);\r\n  const [taskName, setTaskName] = useState(props.taskName);\r\n  const [taskDesc, setTaskDesc] = useState(props.taskDesc);\r\n  const [taskId, settaskId] = useState(props.taskId);\r\n  const [ctrlPressed, setCtrlPressed] = useState(false)\r\n\r\n  function changePriority(event) {\r\n    setTaskPri(event.target.value);\r\n  }\r\n  function displayPriProperly() {\r\n    //this func basically hides the priority name and unhides the none priority(cause by default it is hidden..😒😒mui)\r\n    document.getElementsByClassName(\r\n      \"MuiSelect-root\"\r\n    )[0].lastChild.style.display = \"none\";\r\n    if (taskPri == \"0\") {\r\n      document.getElementsByClassName(\r\n        \"MuiSelect-root\"\r\n      )[0].firstElementChild.style.display = \"block\";\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    displayPriProperly();\r\n  }, [taskPri]);\r\n  function saveTodo() {\r\n    if (props.taskId === \"\") {\r\n      //makes a new todo if the id prop is empty str which means that no particular todo is opened\r\n      firebaseApp\r\n        .firestore()\r\n        .collection(\"todos\")\r\n        .add({\r\n          taskName: taskName,\r\n          taskDesc: taskDesc,\r\n          time: props.time,\r\n          priority: taskPri,\r\n          user: firebaseApp.auth().currentUser.uid,\r\n          finished: false,\r\n        })\r\n        .then(() => {\r\n          props.shouldReload(); //triggers loadData() in allTodos which fetches all todos again from firestore\r\n        });\r\n    } else {\r\n      //modifies the properties of original todo if some exisiting todo is opened in modal\r\n      firebaseApp\r\n        .firestore()\r\n        .collection(\"todos\")\r\n        .doc(taskId)\r\n        .set(\r\n          {\r\n            taskName: taskName,\r\n            taskDesc: taskDesc,\r\n            priority: taskPri,\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(() => {\r\n          props.shouldReload();\r\n        });\r\n    }\r\n    props.openTodoModal(false);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"modalBackground\"\r\n      onClick={(e) => {\r\n        try {\r\n          if (!document.getElementsByClassName(\"modal\")[0].contains(e.target)) {\r\n            //this if statement checks if the click is inside the modal of not\r\n            props.openTodoModal(false);\r\n          }\r\n        } catch (error) {} //ve added a try catch statement cause it gives error when i open the priority list\r\n      }}\r\n      onKeyDown={(evt) => {\r\n        //this function checks for keypresses..in case esc button is pressed modal is closed..if ctrl+s is pressed its saved\r\n        if (evt.key==\"Escape\"){\r\n          props.openTodoModal(false);\r\n        }else if(evt.key==\"Control\"){\r\n          setCtrlPressed(true)\r\n        }else if(evt.key==\"s\" && ctrlPressed){\r\n          setCtrlPressed(false)\r\n          evt.preventDefault()\r\n          saveTodo()\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"modal\">\r\n        <div className=\"modalTopbar\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"modalTaskName\"\r\n            placeholder=\"Task Name\"\r\n            spellCheck=\"false\"\r\n            value={taskName}\r\n            autoComplete=\"off\"\r\n            maxLength=\"42\"\r\n            onChange={(e) => setTaskName(e.target.value)}\r\n          />\r\n          <div className=\"modalButtons\">\r\n            <FormControl>\r\n              <Select value={taskPri} onChange={changePriority} displayEmpty>\r\n                <MenuItem value=\"3\" className=\"eachPriority\">\r\n                  <PriorityHighIcon\r\n                    id=\"highPriority\"\r\n                    style={{ color: \"#FF3131\" }}\r\n                  ></PriorityHighIcon>\r\n                  <span>High</span>\r\n                </MenuItem>\r\n                <MenuItem value=\"2\" className=\"eachPriority\">\r\n                  <PriorityHighIcon\r\n                    id=\"mediumPriority\"\r\n                    style={{ color: \"#464D8E\" }}\r\n                  ></PriorityHighIcon>\r\n                  <span>Medium</span>\r\n                </MenuItem>\r\n                <MenuItem value=\"1\" className=\"eachPriority\">\r\n                  <PriorityHighIcon\r\n                    id=\"lowPriority\"\r\n                    style={{ color: \"#11B421\" }}\r\n                  ></PriorityHighIcon>\r\n                  <span>Low</span>\r\n                </MenuItem>\r\n                <MenuItem value=\"0\" className=\"eachPriority\">\r\n                  <PriorityHighIcon></PriorityHighIcon>\r\n                  <span>No priority</span>\r\n                </MenuItem>\r\n              </Select>\r\n              <FormHelperText>Priority</FormHelperText>\r\n            </FormControl>\r\n            <IconButton\r\n              title=\"Back\"\r\n              id=\"modalBackButton\"\r\n              onClick={() => props.openTodoModal(false)}\r\n            >\r\n              <ArrowBack />\r\n            </IconButton>\r\n            <IconButton\r\n              title=\"Save\"\r\n              id=\"modalSaveButton\"\r\n              onClick={() => saveTodo()}\r\n            >\r\n              <Save />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <textarea\r\n          spellCheck=\"false\"\r\n          id=\"modalTaskDesc\"\r\n          placeholder=\"Task Description\"\r\n          value={taskDesc}\r\n          onChange={(e) => setTaskDesc(e.target.value)}\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTodoModal;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\EachTodo\\EachTodo.js",["111","112","113","114","115","116"],"import {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport firebaseApp from \"../../firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./EachTodo.css\";\r\n\r\nfunction EachTodo(props) {\r\n  const [checked, setChecked] = useState(props.finished);\r\n  const [modalOpen, setModalOpen] = useState(false); //this state controls the delete modal\r\n\r\n  const checkUncheckfunc = (event) => {\r\n    //this toggles check of todo checkbox and also toggles boolean value of finished property of that particular todo in firestore\r\n    setChecked(event.target.checked);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .doc(props.id)\r\n      .set(\r\n        {\r\n          finished: !checked ? true : false, //this seems contradictory but due to some reason value of checked is false when i check it and true when i uncheck\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        props.startLoading(); //this triggers that loadData func in allTodos which fetches all todos again\r\n      });\r\n  };\r\n  function deleteTodo() {\r\n    //this func deletes that particular todo\r\n    setModalOpen(false);\r\n    firebaseApp\r\n      .firestore()\r\n      .collection(\"todos\")\r\n      .doc(props.id)\r\n      .delete()\r\n      .then(() => {\r\n        props.startLoading();\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"eachTodo\">\r\n      <Dialog\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure you want to delete this item from your list?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setModalOpen(false)} color=\"secondary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={deleteTodo} color=\"primary\" autoFocus>\r\n            Yeah\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Checkbox\r\n        style={{\r\n          color: props.finished\r\n            ? \"#474747\"\r\n            : props.priority == 3\r\n            ? \"#ff5151\"\r\n            : props.priority == 2\r\n            ? \"#7885fb\"\r\n            : props.priority == 1\r\n            ? \"#20e734\"\r\n            : \"rgba(198, 196, 196, 0.61)\",//different color based on priority\r\n        }}\r\n        checked={checked}\r\n        onChange={checkUncheckfunc}\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n      <p\r\n        className={\r\n          props.finished\r\n            ? \"finishedTodo eachTodoTaskName\"\r\n            : props.priority == 3\r\n            ? \"highPriority eachTodoTaskName\"\r\n            : props.priority == 2\r\n            ? \"mediumPriority eachTodoTaskName\"\r\n            : props.priority == 1\r\n            ? \"lowPriority eachTodoTaskName\"\r\n            : \"noPriority eachTodoTaskName\"\r\n        }\r\n        onClick={() => {\r\n          props.expandTodo(//this triggers the func in all todos which renders the todo modal with all these parameters as props\r\n            props.id,\r\n            props.taskName,\r\n            props.taskDesc,\r\n            props.priority\r\n          );\r\n        }}\r\n      >\r\n        {props.taskName}\r\n      </p>\r\n      <IconButton onClick={() => setModalOpen(true)}>\r\n        <DeleteIcon\r\n          style={{\r\n            color: \"#FF3131\",\r\n          }}\r\n        />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EachTodo;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Calendar\\Calendar.js",["117","118","119","120"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport \"./Calendar.css\";\r\nimport { loadingContext } from \"../../loadingContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const months = {\r\n  0: \"January\",\r\n  1: \"February\",\r\n  2: \"March\",\r\n  3: \"April\",\r\n  4: \"May\",\r\n  5: \"June\",\r\n  6: \"July\",\r\n  7: \"August\",\r\n  8: \"September\",\r\n  9: \"October\",\r\n  10: \"November\",\r\n  11: \"December\",\r\n};\r\n\r\nfunction Calendar() {\r\n  const isLoading = useContext(loadingContext);\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const history = useHistory();\r\n  const getDaysIn = (year, month) => {\r\n    //this function returns the no of days in a particular month\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n  function formattedDate(date) {\r\n    //this function returns any specific date in the format i want which is dd/mm/yyyy\r\n    let day = date.getDate();\r\n    let month = date.getMonth();\r\n    let year = date.getFullYear();\r\n    return `${day}/${month + 1}/${year}`;\r\n  }\r\n  const weekDays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n  const getReqRows = () => {\r\n    //this function returns a giant list which contains several lists with each list representing a week in the month and having all dates in that week\r\n    let noPrevDays = new Date(currentYear, currentMonth, 1).getDay() - 1;\r\n    noPrevDays = noPrevDays === -1 ? 6 : noPrevDays;\r\n    //this var holds the value of no of days in previous month which appear in the first week of this month\r\n\r\n    let noNextDays =\r\n      7 -\r\n      new Date(\r\n        currentYear,\r\n        currentMonth,\r\n        getDaysIn(currentYear, currentMonth)\r\n      ).getDay();\r\n    noNextDays = noNextDays === 7 ? 0 : noNextDays;\r\n    //this var holds the value of no of days in next month which appear in the last week of this month\r\n\r\n    let prevDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth - 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    prevDays =\r\n      noPrevDays != 0 ? prevDays.slice(-noPrevDays, prevDays.length + 1) : [];\r\n    prevDays.forEach((name, index) => {\r\n      if (currentMonth > 0) {\r\n        prevDays[index] = `${prevDays[index]}/${currentMonth}/${currentYear}`;\r\n      } else {\r\n        prevDays[index] = `${prevDays[index]}/12/${currentYear - 1}`;\r\n      }\r\n    });\r\n    //var prevDays contains all dates which are in previous month but are present in the first week of this month\r\n\r\n    let nextDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth + 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    nextDays = nextDays.slice(0, noNextDays);\r\n    nextDays.forEach((name, index) => {\r\n      if (currentMonth + 1 <= 11) {\r\n        nextDays[index] = `${nextDays[index]}/${\r\n          currentMonth + 2\r\n        }/${currentYear}`;\r\n      } else {\r\n        nextDays[index] = `${nextDays[index]}/1/${currentYear + 1}`;\r\n      }\r\n    });\r\n    //var nextDays contains all dates which are in next month but are present in the last week of this month\r\n\r\n    let currentDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth)).keys(),\r\n    ].map((x) => x + 1);\r\n    currentDays.forEach((name, index) => {\r\n      currentDays[index] = `${currentDays[index]}/${\r\n        currentMonth + 1\r\n      }/${currentYear}`;\r\n    });\r\n    //var currentDays holds all the dates which are present in this month\r\n\r\n    let allDays = [...prevDays, ...currentDays, ...nextDays];\r\n    //allDays holds all dates in all weeks of current month\r\n\r\n    let horizontalList = [];\r\n    let i = 0;\r\n    while (i < allDays.length) {\r\n      //every 7 elements in allDays r pushed as a separate list(which represents a week) in horizontalList\r\n      horizontalList.push(allDays.slice(i, i + 7));\r\n      i = i + 7;\r\n    }\r\n    return horizontalList;\r\n  };\r\n\r\n  function changeId() {\r\n    //this function changes the id of td which contains today's date to today and those which contain dates of not this month to notThisMonth...cause i ve defined separate css for these classes\r\n\r\n    let allDates = document.getElementsByTagName(\"td\"); //gets all td elements which hold all dates of all the weeks in the currentMonth\r\n    let todayDate = formattedDate(new Date()); //gets today's date in format of dd/mm/yyyy\r\n    let today = document.getElementById(todayDate); //gets the element in html whose id matches today's date\r\n    if (today != null) {\r\n      today.id = \"today\"; //sets today as id of element with today's date as prev id\r\n    } else {\r\n    }\r\n    for (let each of allDates) {\r\n      //this loop goes through all elements in allDays, splits the id of every element and checks if the month is the current month or not..if its not the current month then the id is changed to notThisMonth\r\n      if (each.id.split(\"/\")[1] != currentMonth + 1 && each.id != \"today\") {\r\n        each.id = \"notThisMonth\";\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    changeId();\r\n  }, [isLoading, currentMonth]);\r\n  const increaseMonth = () => { \r\n    //this function increases the month and changes the month to jan of next year if the existing month is december\r\n    if (currentMonth + 1 <= 11) {\r\n      setCurrentMonth(currentMonth + 1);\r\n    } else {\r\n      setCurrentYear(currentYear + 1);\r\n      setCurrentMonth(0);\r\n    }\r\n  };\r\n\r\n  const decreaseMonth = () => {\r\n    //this function decreases the month and changes the month to december of previous year if the existing month is jan\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(currentMonth - 1);\r\n    } else {\r\n      setCurrentYear(currentYear - 1);\r\n      setCurrentMonth(11);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"topbar\">\r\n        <IconButton color=\"secondary\" onClick={() => decreaseMonth()}>\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <span className=\"topbarMonth\">\r\n          {months[currentMonth]}&nbsp;{currentYear}\r\n        </span>\r\n        <IconButton color=\"secondary\" onClick={() => increaseMonth()}>\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n      <table>\r\n        <tr>\r\n          {weekDays.map((day) => (\r\n            <th className=\"day\">{day}</th>\r\n          ))}\r\n        </tr>\r\n        {getReqRows().map((row) => (\r\n          <tr className=\"row\">\r\n            {/* each list in getReqRows is used as a row here */}\r\n            {row.map((date) => (\r\n              // each date in the list is used as id to td\r\n              <td id={date}>\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    history.push({\r\n                      pathname: \"daily/allTodos\",\r\n                      state: { time: date, lastPage: \"daily\" },\r\n                    })\r\n                  }\r\n                >\r\n                  {\r\n                    //the day part of the date is used here..\r\n                    date.split(\"/\")[0]\r\n                  }\r\n                </IconButton>\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\index.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\ClosedRoute.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Month\\Month.js",["121","122"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Signup\\Signup.js",["123"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\PrivateRoute.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Week\\Week.js",["124"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport WeekCalendar from \"../WeekCalendar/WeekCalendar\";\r\nimport \"./Week.css\";\r\nfunction Week() {\r\n  return (\r\n    <div className=\"week\">\r\n      <Navbar />\r\n      <div className=\"weekPage\">\r\n      <Sidebar />\r\n      <div className=\"weekPageEmpty\">\r\n        <WeekCalendar/>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Week;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Loading\\Loading.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\LongTerm\\LongTerm.js",["125","126","127"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Notes\\Notes.js",[],["128","129"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Login\\Login.js",["130","131","132","133"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\WeekCalendar\\WeekCalendar.js",["134","135","136"],"import { Button, IconButton } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./WeekCalendar.css\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {months} from '../Calendar/Calendar';\r\n\r\nfunction WeekCalendar() {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const history = useHistory();\r\n  const weekMonths = {\r\n    0: \"Jan\",\r\n    1: \"Feb\",\r\n    2: \"Mar\",\r\n    3: \"Apr\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"Aug\",\r\n    8: \"Sept\",\r\n    9: \"Oct\",\r\n    10: \"Nov\",\r\n    11: \"Dec\",\r\n  }; //these r the months for the topbar\r\n\r\n  const getWeekFormattedDate = (date) => {\r\n    //this converts the date to the format dd M\r\n    return `${date.getDate()} ${\r\n      weekMonths[date.getMonth()]\r\n    } ${date.getFullYear()}`;\r\n  };\r\n\r\n  function replaceDate(date) {\r\n    //this function removes space and year from the date\r\n    return date.replace(/\\s\\d{4}/g, \"\");\r\n  }\r\n\r\n  const getDaysIn = (year, month) => {\r\n    //this function returns the no of days in a particular month\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n\r\n  const increaseMonth = () => {\r\n    //this function increases the month and changes the month to jan of next year if the existing month is december\r\n    if (currentMonth + 1 <= 11) {\r\n      setCurrentMonth(currentMonth + 1);\r\n    } else {\r\n      setCurrentYear(currentYear + 1);\r\n      setCurrentMonth(0);\r\n    }\r\n  };\r\n\r\n  const decreaseMonth = () => {\r\n    //this function decreases the month and changes the month to december of previous year if the existing month is jan\r\n    if (currentMonth > 0) {\r\n      setCurrentMonth(currentMonth - 1);\r\n    } else {\r\n      setCurrentYear(currentYear - 1);\r\n      setCurrentMonth(11);\r\n    }\r\n  };\r\n\r\n  const getWeeks = () => {\r\n    //this function returns all the weeks in the current month\r\n\r\n    let noPrevDays = new Date(currentYear, currentMonth, 1).getDay() - 1;\r\n    noPrevDays = noPrevDays === -1 ? 6 : noPrevDays;\r\n    //this var holds the value of no of days in previous month which appear in the first week of this month\r\n\r\n    let noNextDays =\r\n      7 -\r\n      new Date(\r\n        currentYear,\r\n        currentMonth,\r\n        getDaysIn(currentYear, currentMonth)\r\n      ).getDay();\r\n    noNextDays = noNextDays === 7 ? 0 : noNextDays;\r\n    //this var holds the value of no of days in next month which appear in the last week of this month\r\n\r\n    let prevDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth - 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    prevDays =\r\n      noPrevDays != 0 ? prevDays.slice(-noPrevDays, prevDays.length + 1) : [];\r\n    prevDays.forEach((name, index) => {\r\n      if (currentMonth > 0) {\r\n        prevDays[index] = `${prevDays[index]} ${\r\n          weekMonths[currentMonth - 1]\r\n        } ${currentYear}`;\r\n      } else {\r\n        prevDays[index] = `${prevDays[index]} Dec ${currentYear - 1}`;\r\n      }\r\n    });\r\n    //var prevDays contains all dates which are in previous month but are present in the first week of this month\r\n\r\n    let nextDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth + 1)).keys(),\r\n    ].map((x) => x + 1);\r\n    nextDays = nextDays.slice(0, noNextDays);\r\n    nextDays.forEach((name, index) => {\r\n      if (currentMonth + 1 <= 11) {\r\n        nextDays[index] = `${nextDays[index]} ${\r\n          weekMonths[currentMonth + 1]\r\n        } ${currentYear}`;\r\n      } else {\r\n        nextDays[index] = `${nextDays[index]} Jan ${currentYear + 1}`;\r\n      }\r\n    });\r\n    //var nextDays contains all dates which are in next month but are present in the last week of this month\r\n\r\n    let currentDays = [\r\n      ...Array(getDaysIn(currentYear, currentMonth)).keys(),\r\n    ].map((x) => x + 1);\r\n    currentDays.forEach((name, index) => {\r\n      currentDays[\r\n        index\r\n      ] = `${currentDays[index]} ${weekMonths[currentMonth]} ${currentYear}`;\r\n    });\r\n    //var currentDays holds all the dates which are present in this month\r\n\r\n    let allDays = [...prevDays, ...currentDays, ...nextDays];\r\n    //allDays holds all dates in all weeks of current month\r\n\r\n    let weeksList = [];\r\n    let i = 0;\r\n    let today = getWeekFormattedDate(new Date());\r\n    while (i < allDays.length) {\r\n      //this while loop loops through a week(in layman's terms)\r\n      let foundToday = false;\r\n      for (let each of allDays.slice(i, i + 7)) {\r\n        //this loops through all days in this particular week\r\n        if (each == today) {\r\n          //when any day matches with today's date then the foundToday switch is turned true for this week\r\n          foundToday = true;\r\n        }\r\n      }\r\n      weeksList.push(\r\n        foundToday\r\n          ? `${allDays[i]}-${allDays[i + 6]}#currentWeek`\r\n          : `${allDays[i]}-${allDays[i + 6]}`\r\n        //if today's date lies in this week then foundToday ll be true and then the week ll be labelled as #currentWeek\r\n      );\r\n      foundToday = false; //foundToday is turned false before running the while loop for next week\r\n      i = i + 7;\r\n    }\r\n    return weeksList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"weekCalendar\">\r\n      <div className=\"topbar\">\r\n        <IconButton color=\"secondary\" onClick={() => decreaseMonth()}>\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <span className=\"topbarMonth\">\r\n          {months[currentMonth]}&nbsp;{currentYear}\r\n        </span>\r\n        <IconButton color=\"secondary\" onClick={() => increaseMonth()}>\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"allWeeks\">\r\n        {getWeeks().map((week) => (\r\n          <Button\r\n            className={\r\n              week.split(\"#\")[1] == \"currentWeek\"\r\n                ? \"eachWeek currentWeek\"\r\n                : \"eachWeek\"\r\n            }\r\n            onClick={() =>\r\n              history.push({\r\n                pathname: \"week/allTodos\",  \r\n                state: { time: week.split(\"#\")[0], lastPage: \"week\" },\r\n              })\r\n            }\r\n          >\r\n            {replaceDate(week.split(\"#\")[0])}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeekCalendar;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\App.js",["137","138"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\YearPicker\\YearPicker.js",["139"],"import React, { useState } from \"react\";\r\nimport \"./YearPicker.css\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nfunction YearPicker(props) {\r\n  function getYears() {\r\n    let allYears = [];\r\n    let initialYear = 2020;\r\n    while (initialYear <= 2100) {\r\n      allYears.push(initialYear);\r\n      initialYear++;\r\n    }\r\n    return allYears;\r\n  }\r\n  return (\r\n    <div className=\"yearPicker\">\r\n      <FormControl>\r\n        <Select\r\n          value={props.year}\r\n          onChange={(e) => props.changeYear(e.target.value)}\r\n          displayEmpty\r\n          inputProps={{ \"aria-label\": \"Without label\" }}\r\n        >\r\n          {getYears().map((year) => (\r\n            <MenuItem value={year}>{year}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YearPicker;\r\n","C:\\Users\\Pranil\\pranil\\conquer\\src\\firebase.js",[],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Year\\Year.js",["140","141"],"C:\\Users\\Pranil\\pranil\\conquer\\src\\Components\\Navbar\\Navbar.js",[],{"ruleId":"142","severity":1,"message":"143","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":44,"column":30,"nodeType":"148","messageId":"149","endLine":44,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":86,"column":6,"nodeType":"152","endLine":86,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":109,"column":23,"nodeType":"156","messageId":"157","endLine":109,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":109,"column":49,"nodeType":"156","messageId":"157","endLine":109,"endColumn":51},{"ruleId":"154","severity":1,"message":"155","line":119,"column":23,"nodeType":"156","messageId":"157","endLine":119,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":137,"column":35,"nodeType":"156","messageId":"157","endLine":137,"endColumn":37},{"ruleId":"154","severity":1,"message":"155","line":137,"column":64,"nodeType":"156","messageId":"157","endLine":137,"endColumn":66},{"ruleId":"142","severity":1,"message":"158","line":8,"column":3,"nodeType":"144","messageId":"145","endLine":8,"endColumn":13},{"ruleId":"142","severity":1,"message":"159","line":10,"column":3,"nodeType":"144","messageId":"145","endLine":10,"endColumn":15},{"ruleId":"142","severity":1,"message":"160","line":20,"column":18,"nodeType":"144","messageId":"145","endLine":20,"endColumn":27},{"ruleId":"154","severity":1,"message":"161","line":31,"column":17,"nodeType":"156","messageId":"157","endLine":31,"endColumn":19},{"ruleId":"150","severity":1,"message":"162","line":39,"column":6,"nodeType":"152","endLine":39,"endColumn":15,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"161","line":91,"column":20,"nodeType":"156","messageId":"157","endLine":91,"endColumn":22},{"ruleId":"154","severity":1,"message":"161","line":93,"column":25,"nodeType":"156","messageId":"157","endLine":93,"endColumn":27},{"ruleId":"154","severity":1,"message":"161","line":95,"column":25,"nodeType":"156","messageId":"157","endLine":95,"endColumn":27},{"ruleId":"154","severity":1,"message":"161","line":71,"column":30,"nodeType":"156","messageId":"157","endLine":71,"endColumn":32},{"ruleId":"154","severity":1,"message":"161","line":73,"column":30,"nodeType":"156","messageId":"157","endLine":73,"endColumn":32},{"ruleId":"154","severity":1,"message":"161","line":75,"column":30,"nodeType":"156","messageId":"157","endLine":75,"endColumn":32},{"ruleId":"154","severity":1,"message":"161","line":87,"column":30,"nodeType":"156","messageId":"157","endLine":87,"endColumn":32},{"ruleId":"154","severity":1,"message":"161","line":89,"column":30,"nodeType":"156","messageId":"157","endLine":89,"endColumn":32},{"ruleId":"154","severity":1,"message":"161","line":91,"column":30,"nodeType":"156","messageId":"157","endLine":91,"endColumn":32},{"ruleId":"154","severity":1,"message":"155","line":61,"column":18,"nodeType":"156","messageId":"157","endLine":61,"endColumn":20},{"ruleId":"154","severity":1,"message":"155","line":121,"column":33,"nodeType":"156","messageId":"157","endLine":121,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":121,"column":64,"nodeType":"156","messageId":"157","endLine":121,"endColumn":66},{"ruleId":"150","severity":1,"message":"164","line":128,"column":6,"nodeType":"152","endLine":128,"endColumn":31,"suggestions":"165"},{"ruleId":"154","severity":1,"message":"161","line":30,"column":48,"nodeType":"156","messageId":"157","endLine":30,"endColumn":50},{"ruleId":"154","severity":1,"message":"161","line":31,"column":63,"nodeType":"156","messageId":"157","endLine":31,"endColumn":65},{"ruleId":"142","severity":1,"message":"166","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"167","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":20},{"ruleId":"142","severity":1,"message":"168","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"169","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":14},{"ruleId":"142","severity":1,"message":"170","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":15},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"142","severity":1,"message":"175","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":37},{"ruleId":"142","severity":1,"message":"176","line":11,"column":3,"nodeType":"144","messageId":"145","endLine":11,"endColumn":16},{"ruleId":"142","severity":1,"message":"177","line":12,"column":3,"nodeType":"144","messageId":"145","endLine":12,"endColumn":20},{"ruleId":"142","severity":1,"message":"178","line":15,"column":3,"nodeType":"144","messageId":"145","endLine":15,"endColumn":8},{"ruleId":"154","severity":1,"message":"155","line":86,"column":18,"nodeType":"156","messageId":"157","endLine":86,"endColumn":20},{"ruleId":"154","severity":1,"message":"161","line":134,"column":18,"nodeType":"156","messageId":"157","endLine":134,"endColumn":20},{"ruleId":"154","severity":1,"message":"161","line":168,"column":34,"nodeType":"156","messageId":"157","endLine":168,"endColumn":36},{"ruleId":"142","severity":1,"message":"179","line":2,"column":25,"nodeType":"144","messageId":"145","endLine":2,"endColumn":30},{"ruleId":"154","severity":1,"message":"155","line":30,"column":30,"nodeType":"156","messageId":"157","endLine":30,"endColumn":32},{"ruleId":"142","severity":1,"message":"180","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"169","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":14},{"ruleId":"142","severity":1,"message":"170","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":15},"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["181"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'settaskId' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'displayPriProperly'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'changeId'. Either include it or remove the dependency array.",["183"],"'useEffect' is defined but never used.","'useHistory' is defined but never used.","'AllTodos' is defined but never used.","'Navbar' is defined but never used.","'Sidebar' is defined but never used.","no-native-reassign",["184"],"no-negated-in-lhs",["185"],"'forwardRef' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'Slide' is defined but never used.","'Route' is defined but never used.","'useState' is defined but never used.",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [loadData]",{"range":"192","text":"193"},"Update the dependencies array to be: [displayPriProperly, taskPri]",{"range":"194","text":"195"},"Update the dependencies array to be: [isLoading, currentMonth, changeId]",{"range":"196","text":"197"},[3842,3844],"[loadData]",[1272,1281],"[displayPriProperly, taskPri]",[5136,5161],"[isLoading, currentMonth, changeId]"]